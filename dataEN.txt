[{"chapterUserReading":"-1","des":"\"Nice to meet you. My name is Kang Hajin, and I’ll be serving as the head of the Overseas Sales Department starting today.\" The man she thought she would never see again after a one-night mistake with her first love ten years ago had returned—this time as the one in power. \"You say you could never date me even if it killed you, and I can’t treat you as just another subordinate.\" \"Then there’s only one answer.\" …What on earth could that be? \"We’ll just have to be partners.\" As she watched Hajin’s eyes curve gently, Ji-hye instinctively knew. After ten years, Kang Hajin had once again barged into her life as a massive storm.","href":"pure-love-of-gap-33607/","img":"https://likemanga.ink/upload/pages/2025/02/1739796679-67b330c73f3d1-2b224e8a33658090fe226f86272f519f66368d941602291224.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:295","statusDownload":-1,"time":1742711478917,"timeUpdateOnline":"","title":"Pure Love of Gap","type":"Manhua"},{"chapterUserReading":"-1","des":"백작가의 불청객들 / The Count’s Intruders / The Count’s Intruders , 백작가의 불청객들 , The Count’s Unwelcome Guests , The Count’s Uninvited Guests Hayden Grummond Fildette, the only son of Count and Countess Fildette, was the perfect heir and lovable anchor who kept his family together. But the peaceful days come to an end when an unwelcome guest from his father’s past surfaces, threatening Hayden’s position with a possible half-brother and tipping over his parents’ precarious relationship. Will he and his family be able to withstand the storm of uncomfortable truths and misunderstandings, or sink in the raging conflicts?","href":"the-unwelcome-guests-of-house-fildette-6235/","img":"https://likemanga.ink/upload/pages/2023/08/1692779970-64e5c5c244530-89d3e90b8bf2328273dd2e87d6e4ca3cf5647bb14006005617.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.2K","statusDownload":-1,"time":1742711478920,"timeUpdateOnline":"","title":"The Unwelcome Guests of House Fildette","type":"Manhua"},{"chapterUserReading":"-1","des":"When Hana wakes up in a novel as Cielina, a character who is destined to die, she decides to keep a low profile—until disturbing rumors surface that her husband, Duke Killian Seyfried, killed his own niece and nephew. Diving into the mystery, she uncovers a haunting family curse that renders the children monstrous in others’ eyes. Yet, Cielina’s touch reveals their true forms. As she digs deeper, Cielina discovers she’s been transported into this world by a goddess with a mission: to lift the Seyfried family’s dark curse. Can she unravel the family’s twisted secrets and alter her own fate?","href":"becoming-the-lady-of-the-cursed-ducal-house-10857/","img":"https://likemanga.ink/upload/pages/2023/10/1697867792-65336810744b6-7faf8ec90b52823076d0581349ac41d791775e442944277360.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.8K","statusDownload":-1,"time":1742711478923,"timeUpdateOnline":"","title":"Becoming the Lady of the Cursed Ducal House","type":"Manhua"},{"chapterUserReading":"-1","des":"Saotome family also known as the family full of fudanshi. From the single dad to his two sons, BL runs in their blood.","href":"fudanshi-kazoku-19296/","img":"https://likemanga.ink/upload/pages/2024/04/1713060912-661b3c301c3f6-fudanshikazoku.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:91","statusDownload":-1,"time":1742711478924,"timeUpdateOnline":"","title":"Fudanshi Kazoku","type":"Manhua"},{"chapterUserReading":"-1","des":"In the future, Utopia has finally been achieved thanks to medical nanotechnology and a powerful ethic of social welfare and mutual consideration. This perfect world isn\u0027t that perfect though, and three young girls stand up to totalitarian kindness and super-medicine by attempting suicide via starvation. It doesn\u0027t work, but one of the girls—Tuan Kirie—grows up to be a member of the World Health Organization. As a crisis threatens the harmony of the new world, Tuan rediscovers another member of her suicide pact, and together they must help save the planet...from itself.","href":"harmony-manga-17940/","img":"https://likemanga.ink/upload/pages/2024/03/1711334779-6600e57b0197e-harmony.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:34","statusDownload":-1,"time":1742711478926,"timeUpdateOnline":"","title":"Harmony - Manga","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"kamisama-ga-mitenai-kara-32198/","img":"https://likemanga.ink/upload/pages/2024/10/1730113893-671f7165c7574-kamisamagamitenaikara.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:142","statusDownload":-1,"time":1742711478928,"timeUpdateOnline":"","title":"Kami-sama ga Mitenai kara","type":"Manhua"},{"chapterUserReading":"-1","des":"The Silent Don has returned to modern-day Korea! The quiet man has another face— Jo Yongde, who works in the product development department of a cosmetics company, is clumsy and constantly failing at everything he does, making him an annoyance to those around him. Even when he gives a presentation in front of the company president, he only ends up making a fool of himself, leaving his manager and colleagues exasperated. The only one who warmly reaches out to him is his teammate, Sear. However, Yongde has another identity—he is the only son of a crime syndicate leader who controls the underworld. After his father is murdered, he takes over as the head of the organization. Yet, despite everything, Yongde continues to go to work at the company as if nothing has changed. What is he really thinking…?","href":"the-boss-has-two-faces-the-silent-don-webtoon-33788/","img":"https://likemanga.ink/upload/pages/2025/03/1741072998-67c6aa6654343-thebosshastwofacesthesilentdonwebtoon.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:328","statusDownload":-1,"time":1742711478929,"timeUpdateOnline":"","title":"The Boss Has Two Faces - The Silent Don Webtoon","type":"Manhua"},{"chapterUserReading":"-1","des":"Kim Yoon, who was at the height of her success as the top makeup artist, died from overwork. She was given a second chance to enter the world of her favorite novel La Vie en Rose, however, her luck took a turn for the worse as she ended up inhabiting the body of Calypso Partuan, the cruel stepmother who tormented Coral in the original story. Kim Yoon tries to regain her senses and live well with Coral, but she receives a letter proposing a marriage contract from the second prince of the empire, Macaron. Not only did she never agree to such a contract, and to make matters worse, Macaron was the father of the male lead, Kai! Coral was supposed to marry Kai, but now she was going to marry Kai\u0027s father?! This is a family project between people who are not related by blood at all!","href":"the-female-lead39;s-mother-and-the-male-lead39;s-father-are-married-33693/","img":"https://likemanga.ink/upload/pages/2025/02/1740447576-67bd1f584ed43-1ee2a3cd389050bfae0223b10c0705912c526ea93845491314.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.8K","statusDownload":-1,"time":1742711478933,"timeUpdateOnline":"","title":"The Female Lead\u0027s Mother and the Male Lead\u0027s Father Are Married","type":"Manhua"},{"chapterUserReading":"-1","des":"I was possessed as an errand child who brought meals to the male protagonist who was captured as a test subject at the lab. If the experiment was successful and the male protagonist gained power, the lab would be engulfed in flames. So I tried to run away before that, but I felt bad for the male protagonist who was suffering from the cruel experiment. So I secretly took care of various things while avoiding the researchers\u0027 eyes. \"Come to think of it, what\u0027s your name?\" \"I don\u0027t have a name......\" \"You make me one.\" \"Huh?\" I somehow became a little close to the male protagonist. \"Are you going to abandon me? Don\u0027t do that.\" \"Ah...... but-\" \"Anis, do you mind if I\u0027m wrong?\" \"Ugh...... No. No, I don\u0027t.\" \"Then stay by my side.\" However, the only one who can cure him who is suffering from the side effects of the experiment is the original female protagonist. I tried to help him and leave secretly so that he could find his partner...... \"You promised not to abandon me. But, was it all a lie?” With the burning laboratory in the background, Emilien smiled with cold eyes. “A good child should keep his promises.” The temperature of the hand touching my cheek is cold. The red eyes close as if they are going to engulf me. “Answer, aren’t you going to tell me?” ......What should I do? I think I missed my timing to run away.","href":"i-helped-the-imprisoned-male-lead-and-he-became-an-obsessive-man-33940/","img":"https://likemanga.ink/upload/pages/2025/03/1742004642-67d4e1a2316de-8768df9fb23200db8b81deb215c2b3478ae6e7173845491303.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1K","statusDownload":-1,"time":1742711478935,"timeUpdateOnline":"","title":"I Helped the Imprisoned Male Lead and He Became an Obsessive Man","type":"Manhua"},{"chapterUserReading":"-1","des":"Lucretia, who lived happily as a daughter of the nobility, She was poisoned by Sabrina, whom she thought was her best friend, and wandered between life and death. She miraculously succeeded in saving her life, During the month and a half when she was unconscious, the situation had deteriorated. “Lucretia was a drug dealer, she was a drug addict herself, She committed suicide because she was afraid of being exposed to crime,” and the parents who pleaded not guilty to their daughter had their peerage and property confiscated. Din asks Lucretia, who is overwhelmed by despair, who saved her life. fight alone for the truth with everything lost or, Do you want to be a different person and take revenge?","href":"revenge-on-your-heart-10423/","img":"https://likemanga.ink/upload/pages/2023/10/1697543738-652e763a2b67e-٢٠٢٣١٠١٧١٣٥٥٣٧.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:227","statusDownload":-1,"time":1742711478937,"timeUpdateOnline":"","title":"Revenge on Your Heart","type":"Manhua"},{"chapterUserReading":"-1","des":"Husband: \"I want to live without working!\" Wife: \"Let\u0027s figure out together who you should serve.\" Set in the late Eastern Han period, just before the Three Kingdoms era, this story follows Zhuge Kongming, a renowned scholar who, despite his status, leads a life far from wealthy. His ultimate dream? Passive income. In pursuit of this goal, he accepts a marriage proposal from Huang Chengyan, a wealthy and influential figure in Jingzhou. However, his bride, Huang Yueying, is not just any woman—she\u0027s a spy sent to recruit Kongming into Cao Cao’s camp. Will Kongming resist Yueying’s seductive attempts to win him over? Can Yueying accomplish her mission without her genius husband discovering the truth? A comedic retelling of history that might have happened, featuring a couple with clashing goals in a whirlwind of schemes and romance!","href":"kong-ming-no-spy-yome-33939/","img":"https://likemanga.ink/upload/pages/2025/03/1742004238-67d4e00eaf380-6cfd90af68cfdd5d542b1e485d01e5e0fa3f63436008516979.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:241","statusDownload":-1,"time":1742711478939,"timeUpdateOnline":"","title":"Kong Ming no Spy Yome","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"aka-no-grimoire-24865/","img":"https://likemanga.ink/upload/pages/2024/06/1718155279-6668f80faa3e3-akanogrimoire.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:56","statusDownload":-1,"time":1742711478940,"timeUpdateOnline":"","title":"Aka no Grimoire","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"immortal-science-and-technology-34064/","img":"https://likemanga.ink/upload/pages/2025/03/1742708585-67df9f69bd0cc-immortalscienceandtechnology.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:38","statusDownload":-1,"time":1742711478943,"timeUpdateOnline":"","title":"Immortal science and technology","type":"Manhua"},{"chapterUserReading":"-1","des":"Adele who became a new hunter on behalf of her sick uncle! First day of battle! Kidnapped by a human-eating wolf, Carl! No, but this human-eating wolf is a little weird?! Isn\u0027t he a human-eating wolf? He\u0027s the only one who comes down as a legend. An ancient wolf who could use magic! And also their prince? But why do I have to be your pet?! As a human being with dignity. I\u0027m just with you as a little bit of good faith? Against Tristan, a \"dark wolf\" who\u0027s driving the world into darkness The wolf who tries to save the world, the sword, and how he became his pet Adele\u0027s world of cutie fantasy romance! Can they save the world? And will Adele be able to escape Carl\u0027s pet status?","href":"the-wolf-archduke39;s-companion-33993/","img":"https://likemanga.ink/upload/pages/2025/03/1742278773-67d910758d7d5-b6b32a74ab934c0dae1948c3e63f4d16d08eeff86008589499.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:820","statusDownload":-1,"time":1742711478944,"timeUpdateOnline":"","title":"The Wolf Archduke\u0027s Companion","type":"Manhua"},{"chapterUserReading":"-1","des":"Arin, the adopted daughter of a chaebol family, harbours a twisted affection for her stepmother. After she becomes an adult, Arin accidentally realises that she has unusual abilities. She tries to use her abilities to attract her stepmother\u0027s attention, but her stepbrothers, not her stepmother, want Arin... A dangerous adopted daughter who shakes up the conglomerate \u0027Rare Moon\u0027 family. Her twisted red romance!","href":"my-younger-sister-chooses-me-tonight-17321/","img":"https://likemanga.ink/upload/pages/2024/03/1710164444-65ef09dce75fc-3241692ea4cd9a69b5da70f166ea0bd698f292fc1732513004.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:495","statusDownload":-1,"time":1742711478948,"timeUpdateOnline":"","title":"My Younger Sister Chooses Me Tonight","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"i-won’t-fall-in-love-with-my-idol’s-fan-service-34063/","img":"https://likemanga.ink/upload/pages/2025/03/1742707975-67df9d07d95a5-iwontfallinlovewithmyidolsfanservice.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:28","statusDownload":-1,"time":1742711478949,"timeUpdateOnline":"","title":"I Won’t Fall in Love with My Idol’s Fan Service","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"murim’s-youngest-miracle-demon-doctor-34062/","img":"https://likemanga.ink/upload/pages/2025/03/1742707655-67df9bc7e1423-murimsyoungestmiracledemondoctor.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:48","statusDownload":-1,"time":1742711478950,"timeUpdateOnline":"","title":"Murim’s Youngest Miracle Demon Doctor","type":"Manhua"},{"chapterUserReading":"-1","des":"[Just as your birth did not inspire me, so your death won’t mean anything to me.]Jaina reincarnated as a supporting character who was born as mixed blood of human-dragon and died miserably after being neglected. She is branded as an unclean entity and was abandoned by the dragons.And the first time she met her father, the lord of the tower, Diamide, he just looked at her coldly, as though he didn’t feel any sense of intimacy to his daughter as described in the original.”Is that the one you called my daughter?”Jaina flinched as he approached and lowered her sight.”Blue eyes… but that’s not a proof that she’s my daughter. You could have brought me a child born with another human.”And so he went back leaving her alone and Jaina was living in the shabby warehouse of the tower.Rather than making vain efforts to get into the eyes of his father, the lord of the tower, she decided to have a small luxury that she had never experienced even in her previous life before her death.”You don’t have to think of me as your daughter. I won’t call you father either.””…””Tower’s lord?”So is the father, who should’ve been indifferent, starting to get obsessed? Father, can you just leave me alone?","href":"father-i-won’t-do-anything-6295/","img":"https://likemanga.ink/upload/pages/2023/08/1692789600-64e5eb6064ee7-fatheriwontdoanything193x278.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:2.3K","statusDownload":-1,"time":1742711478952,"timeUpdateOnline":"","title":"Father I Won’T Do Anything","type":"Manhua"},{"chapterUserReading":"-1","des":"Fu Jiu appears to be a normal lad in high school on the surface. But in fact, she (Yes! She!) is the hacker, Z, a villain-terminator in the online world of an alternate world. Having reincarnated into the body of a woman and being forced to disguise herself as a young man, she reigns over the game world, fights for justice, and puts a spell on all the girls around with her innate charm. However, her flirting comes across as gay to the rich Almighty Qin and his inner circle. Over time, the Almighty Qin falls for him… her. Has he turned gay for him… her? Now, that’s confusing!","href":"national-school-prince-is-a-girl-4585/","img":"https://likemanga.ink/upload/pages/2023/08/1692267968-64ddf5c0bda5c-nationalschoolprinceisagirl5167193x278.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:891","statusDownload":-1,"time":1742711478954,"timeUpdateOnline":"","title":"National School Prince Is A Girl","type":"Manhua"},{"chapterUserReading":"-1","des":"After failing the college entrance examination and being cheated on, Han Li, who achieved nothing after graduation, made a wish to heaven: “I wish… to go back in time…” Thus the Consumer System appeared and Han Li regressed to the age of eighteen! Not enough skills? Upgrade them with points! Looks too ordinary? Fix that mug with some points! The rich classmate who always looked for trouble taught him a lesson, and captured the hearts of the goddesses… With this regression, let’s witness how Han Lie counterattacks and rises to the heavens!","href":"i-regressed-to-level-up-instead-of-being-a-simp-4256/","img":"https://likemanga.ink/upload/pages/2023/08/1692146359-64dc1ab79ecd0-iregressedtolevelupinsteadofbeingasimp193x278.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:3K","statusDownload":-1,"time":1742711478956,"timeUpdateOnline":"","title":"I Regressed to Level Up Instead of Being a Simp","type":"Manhua"},{"chapterUserReading":"-1","des":"Global Freeze: I Created A Apocalypse Shelter, where the world is plunged into an icy age, and 95% of humanity is wiped out! In his previous life, our hero Zhang Yi was tragically killed by the very people he helped, thanks to his kind heart.But fear not, for Zhang Yi has been reborn and now possesses the awesome power – space manipulation! He’s gone completely bonkers hoarding supplies for the icy apocalypse and is ready to rule the frozen wasteland! He vows to unleash a hundred times the pain on those who harmed him in the past!","href":"global-freeze-i-created-an-apocalypse-shelter-7512/","img":"https://likemanga.ink/upload/pages/2024/05/1715664072-6642f4c8cad0a-cover.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:11.5K","statusDownload":-1,"time":1742711478958,"timeUpdateOnline":"","title":"Global Freeze: I Created An Apocalypse Shelter","type":"Manhua"},{"chapterUserReading":"-1","des":"Cold, solitary, with a twisted personality—and on top of that, an obsessive chaebol. Ji Tae-kwang is obsession personified. But one day, out of nowhere, he somehow ends up owning a cat! Could this really be the same Ji Tae-kwang everyone feared? A chaotic yet amusing tale of how a ruthless obsessive is reduced to nothing more than a devoted cat butler.","href":"obssesed-butler-34017/","img":"https://likemanga.ink/upload/pages/2025/03/1742432885-67db6a753c706-37be4910c0a23d7efa9db87a4a8a5e7aee1adce26008695826.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:323","statusDownload":-1,"time":1742711478961,"timeUpdateOnline":"","title":"Obssesed butler","type":"Manhua"},{"chapterUserReading":"-1","des":"I had been in the position of Duchess for nine years for my quiet and indifferent husband, but all I had left was contempt and indifference, and the only thing I was accused of having a love affair: “There’s a limit to what I can endure for this marriage. No matter how much you cry or plead to the Emperor, I can’t stand it anymore.” “Can I sign here?” “So if you pretend to be poor like last time, this time… what?” I waved divorce papers on an indifferent day. “I’m done. Can I go now?” “Oh, you don’t have to talk about alimony, dowry, just give me back my dowry” “What are you gonna do with that little money?” My husband, who had not cared what he had done for the past nine years, asked me a question in his voice. I laughed confidently and answered: – “I’m going to open a dessert cafe.” 이혼한 악녀는 케이크를 굽는다 / The Divorcée’s Dessert Cafe","href":"the-divorcee39;s-dessert-cafe-4789/","img":"https://likemanga.ink/upload/pages/2023/08/1692357511-64df5387d1040-6779996c6f89beffa7b9e9fbd58e6fd5a1dc85616008511192.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:4K","statusDownload":-1,"time":1742711478963,"timeUpdateOnline":"","title":"The Divorcée\u0027s Dessert Cafe","type":"Manhua"},{"chapterUserReading":"-1","des":"If you have seven days left in your life. What do you want to do? The death notice issued by the skybound death bureau experiment is as short as seven days, whether you have ever lived at the top of the world or struggled at the edge of life. There is always stumbling, always miss, always regret… It doesn’t really matter how you die; How to live is the point.","href":"the-last-7-days-108/","img":"https://likemanga.ink/upload/pages/2023/08/1691073075-64cbba33aab84-thumb5d7b5af18d3e92264193x278.png","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:193","statusDownload":-1,"time":1742711478965,"timeUpdateOnline":"","title":"The Last 7 Days","type":"Manhua"},{"chapterUserReading":"-1","des":"The story revolves around Yuzuka Hanami, who is approached by a mysterious creature that tells her she has the makings of becoming a magical girl. However, Yuzuka\u0027s magical form has her wearing a swimsuit!","href":"mahou-shoujo-nante-mou-ii-desu-kara-16413/","img":"https://likemanga.ink/upload/pages/2024/02/1708913480-65dbf34861318-mahoushoujonantemouiidesukara.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:15","statusDownload":-1,"time":1742711478967,"timeUpdateOnline":"","title":"Mahou Shoujo Nante Mou Ii Desu Kara","type":"Manhua"},{"chapterUserReading":"-1","des":"One moment oppressing scum yields a moment of satisfaction. Continuously oppressing scum yields continuous satisfaction. Our female main lead, Su Lüxia is bound to the Female Lead Counterattack System and transmigrates to several small worlds. Using elaborate means, she beats up countless cheating bastards and bitches. Su Lüxia: “Only a cheating bastard’s tears of remorse, and the pained moans of a bitch unable to get what she wants bring me solace.” System: “Has my host tapped into her humanity today? Nope.”","href":"cheating-men-must-die-1453/","img":"https://likemanga.ink/upload/pages/2023/08/1691332290-64cfaec29953e-thumb5d6617627cf0b8367193x278.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.5K","statusDownload":-1,"time":1742711478968,"timeUpdateOnline":"","title":"Cheating Men Must Die","type":"Manhua"},{"chapterUserReading":"-1","des":"Possessing the memories from the 21st century, I transmigrated inside a big shot, “Su Bei”, and brought my own “Apprenticeship Up to [10000] Times Feedback” system. The disciples are not only as beautiful as flowers, but they are also blessed with a revolutionary destiny. This is the chosen one who can become the main protagonist in any novel. But these disciples hate to be unable to peel my skin and tear my bones. What the hell did the past Su Bei do against these apprentices!! All of My Female Apprentices Want to Kill Me Nǚ Túdì Gè Gè Xiǎng Shā Wǒ 女徒弟个个想杀我 女徒弟个个想送我归西","href":"all-the-female-apprentices-want-to-kill-me-4876/","img":"https://likemanga.ink/upload/pages/2023/08/1692411660-64e0270c142aa-allthefemaleapprenticeswanttokillme25918193x278web.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:2K","statusDownload":-1,"time":1742711478969,"timeUpdateOnline":"","title":"All the Female Apprentices Want to Kill Me","type":"Manhua"},{"chapterUserReading":"-1","des":"Jiang Beiran traveled through time and space and arrived at the Dragon Continent with a miserable beginning. And when he was lucky enough to obtain the system, it didn’t work as he expected. Therefore, he chose to stay low-key, avoid any chances of showing off, and only concentrate on cultivation. However, reality didn’t allow him to be ordinary. He still became a mysterious powerful cultivator with a lot of flatterers even when he showed off his strength a bit.","href":"i-determine-my-own-destiny-3780/","img":"https://likemanga.ink/upload/pages/2023/08/1691836880-64d761d027796-ideterminemyowndestiny8812193x278.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:2K","statusDownload":-1,"time":1742711478971,"timeUpdateOnline":"","title":"I Determine My Own Destiny","type":"Manhua"},{"chapterUserReading":"-1","des":"After graduating from the police academy and being commissioned as a lieutenant, Jiyong investigates the suspicious complainant Hwang Seong-gu and encounters a nationwide rental scam case. As Jiyong pursues the rental scam gang that evades proper legal judgment, he feels his vigilante rules being tested. And in the meantime, the four vigilantes involved receive threats from someone aware of their identities. They begin to sense the shadow of a great evil behind their adversaries.","href":"vigilante-part-2-29746/","img":"https://likemanga.ink/upload/pages/2024/08/1722589507-66aca143c9162-vigilantepart2.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:207","statusDownload":-1,"time":1742711478974,"timeUpdateOnline":"","title":"Vigilante Part 2","type":"Manhua"},{"chapterUserReading":"-1","des":"Manga artist Takoyakimaru-sensei had someone she was interested in. His name is Ashizawa-kun. He was an extremely talented assistant to Takoyakimaru, he is a very good cook. But he was also the delinquent type that she was extremely not good with! This is a love comedy between an introverted girl and a highly capable delinquent!","href":"yankee-assistant-no-ashizawakun-ni-koi-wo-shita-33554/","img":"https://likemanga.ink/upload/pages/2025/02/1739505288-67aebe8840945-yankeeassistantnoashizawakunnikoiwoshita.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:177","statusDownload":-1,"time":1742711480488,"timeUpdateOnline":"","title":"Yankee Assistant no Ashizawa-kun ni Koi wo Shita","type":"Manhua"},{"chapterUserReading":"-1","des":"One day, this ordinary teenager’s left eye changes. He gambles and opens precious stone treasures. Surrounded by beautiful women, he proudly laughs of his dashing city life.","href":"supreme-god39;s-eye-34061/","img":"https://likemanga.ink/upload/pages/2025/03/1742706021-67df956522b36-90ea837d956268f23fa4fe5a5fa214526844e7d17501000285.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:27","statusDownload":-1,"time":1742711480489,"timeUpdateOnline":"","title":"Supreme God\u0027s Eye","type":"Manhua"},{"chapterUserReading":"-1","des":"\u0027Cha Ju-young\u0027 is imprisoned in a juvenile detention center for rendering his gangster father comatose. Not long after, the father, who was thought never to wake up, comes to visit...","href":"juvenile-prison-27069/","img":"https://likemanga.ink/upload/pages/2024/06/1719686444-6680552ccdc9f-juvenileprison.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:3.1K","statusDownload":-1,"time":1742711480490,"timeUpdateOnline":"","title":"Juvenile Prison","type":"Manhua"},{"chapterUserReading":"-1","des":"The game has emerged into reality, the rules of the world have been turned upside down and humanity has entered the era of becoming players with the world set as a game stage. The only way to become a player is by leveling up to become stronger! The only way to rise to the top of the world! On the day of world fusion Lin Moyue chose to take on the sole hidden class, Necromancer. From then on, Lin Moyue would not die until his summoned creatures died out. “I sit on the throne of bones as the God of the dead and walk between life and death.” “I am a walking catastrophe!”","href":"catastrophic-necromancer-3060/","img":"https://likemanga.ink/upload/pages/2023/08/1691586425-64d38f795e18d-catastrophicnecromancer193x278.png","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:23.6K","statusDownload":-1,"time":1742711480491,"timeUpdateOnline":"","title":"Catastrophic Necromancer","type":"Manhua"},{"chapterUserReading":"-1","des":"The commander who was sent to discover the secret of immortality by the absolute ruler who first unified the continent never returned. The ruler believed he would find the secret no matter what corner of the world he had to search. But by the time the ruler died and the empire fell, he never came back, leaving only countless speculations. Eventually, he was gradually forgotten in the memories of people. And after a long time passed…","href":"asura-manhwa-25795/","img":"https://likemanga.ink/upload/pages/2024/06/1718879166-667403be2c523-asuramanhwa.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.2K","statusDownload":-1,"time":1742711480491,"timeUpdateOnline":"","title":"Asura manhwa","type":"Manhua"},{"chapterUserReading":"-1","des":"\"Pob Phanat,\" a renowned solo female artist with an impeccable reputation. However, deep in her heart, Pob has been longing for her first love that faded away many years ago. And that love is \"Kan, Kan Thiwa,\" who once promised to become a singer alongside her. One day, Pob encounters Kan again... as a flower shop owner and a single mother?\"","href":"flower-of-youth-32615/","img":"https://likemanga.ink/upload/pages/2024/12/1733180992-674e3e40f00a9-flowerofyouth.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:361","statusDownload":-1,"time":1742711480492,"timeUpdateOnline":"","title":"Flower of Youth","type":"Manhua"},{"chapterUserReading":"-1","des":"The adventurer Zion, who possesses the \"Translator\" skill, the ability to understand the language of demons and animals, spends his days and nights on quests with his childhood friends in order to make the A-class party. However, he is suddenly kicked out of the party because his abilities are not useful in battle. Disappointed, Zion makes a new start as a solo adventurer, thanks to the encouragement of Angelina, the guild receptionist. Later, several races join Zion\u0027s party, including a female slime swordsman and half-demon whose skills were deemed useless, and form a party of outsiders who are later described as heroes.","href":"tsuiho-sareta-ore-ga-hazure-gift-honyaku-de-saikyo-party-muso33;-mamono-ya-ma-zoku-to-hanaseru-noryoku-wo-kushi-shite-nariagaru-11587/","img":"https://likemanga.ink/upload/pages/2023/10/1698666293-653f973587cc9-301689918561.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:617","statusDownload":-1,"time":1742711480493,"timeUpdateOnline":"","title":"Tsuiho Sareta Ore Ga Hazure Gift “Honyaku” De Saikyo Party Muso! Mamono Ya Ma Zoku To Hanaseru Noryoku Wo Kushi Shite Nariagaru","type":"Manhua"},{"chapterUserReading":"-1","des":"An introverted part-time food delivery guy working in the countryside receives a food delivery order. When he reaches the delivery address, he discovers that the recipient is a tall and intimidating-like woman. However, as the story unfolds, he eventually discovers…","href":"the-story-of-a-scary-consignee-7659/","img":"https://likemanga.ink/upload/pages/2023/09/1693619951-64f296ef69c93-thestoryofascaryconsignee.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.4K","statusDownload":-1,"time":1742711480494,"timeUpdateOnline":"","title":"The Story Of A Scary Consignee","type":"Manhua"},{"chapterUserReading":"-1","des":"If Li Yunxin were merely human, his deeds would say otherwise. Once a psychologist, now a **painter** wielding sorcery, his true art lies not in ink, but in the unseen threads of the human heart. A hunted man among mortals, a trusted ally among demonshe stands at the crossroads of fate, turning saints into sinners and monsters into pawns. The righteous sects seek his head. The demons whisper his name with reverence and fear. Even the Black and White Lords of the Underworld, merchants of lost souls, hesitate before him. Where does the demon that feasts on human hearts come from? Li Yunxin devours flesh, but his true hunger is for something far more exquisitethe hearts and minds of those who dare to stand in his way.","href":"xinmo-manhua-34015/","img":"https://likemanga.ink/upload/pages/2025/03/1742426677-67db52352b983-xinmo.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:166","statusDownload":-1,"time":1742711480495,"timeUpdateOnline":"","title":"XinMo - Manhua","type":"Manhua"},{"chapterUserReading":"-1","des":"What awaits the marginal company employee who longs for a comfortable life is... dragon slaying! The crops produced in the cheat vegetable garden and the story are all out of the ordinary! The unprecedented farming manga is here!","href":"tensei-shachiku-no-cheat-saien-–-ban’nou-skill-to-benri-na-tsukaima-yousei-wo-kushishitetara-kidzukeba-tairiku-ichi-no-seisan-kyoten-ga-dekiteita-8599/","img":"https://likemanga.ink/upload/pages/2023/09/1694836736-650528000637b-tenseishachikunocheatsaienbannouskilltobenrinatsuk.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:647","statusDownload":-1,"time":1742711480496,"timeUpdateOnline":"","title":"Tensei Shachiku No Cheat Saien – Ban’nou Skill To Benri Na Tsukaima Yousei Wo Kushishitetara Kidzukeba Tairiku Ichi No Seisan Kyoten Ga Dekiteita","type":"Manhua"},{"chapterUserReading":"-1","des":"The daughter of a mad fairy, known for her cruel nature, transforms into a baby to infiltrate a noble family and uncover those who experimented on her mother. However, the eccentric men of the family grow overly attached to her, complicating her plans. As she struggles to escape, she discovers she cant return to her adult form, and her enemies close in.","href":"the-baby-fairy-is-a-villain-34055/","img":"https://likemanga.ink/upload/pages/2025/03/1742656932-67ded5a4a3c9d-thebabyfairyisavillain.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1K","statusDownload":-1,"time":1742711480497,"timeUpdateOnline":"","title":"The Baby Fairy is a Villain","type":"Manhua"},{"chapterUserReading":"-1","des":"\"I sneaked into the witch\u0027s land, where men are forbidden, using feminization magic!\" A guy gets hit by a truck after saving a girl, and gets sent into another world. Unlike other protagonists who get insane cheat skills, he gets a skill that allows him to transform into a girl instead.","href":"danshi-kinsei-majo-no-kuni-ni-nyotaika-skill-de-nyuukoku-shite-mita-21735/","img":"https://likemanga.ink/upload/pages/2024/05/1715574190-664195ae9abac-danshikinseimajonokunininyotaikaskilldenyuukokushi.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:778","statusDownload":-1,"time":1742711480498,"timeUpdateOnline":"","title":"Danshi Kinsei Majo no Kuni ni Nyotaika Skill de Nyuukoku shite mita","type":"Manhua"},{"chapterUserReading":"-1","des":"I’m Going to Break This Marriage Now / 이제 그만 파혼해 드릴게요 / Time To Call Off This Engagement / I will break this marriage I, who suddenly possessed Leah Prezis, the fiancee of a sub-male supporting character and also known as the vindictive evil woman resentfully hated by that of the readers. Who was also betrayed by the female protagonist and her fiance. I put my everything into changing the fate of Leah, the wicked woman. “I’m going to ask of you to break our engagement. ” Finally, I asked for a breakup in order to escape from the barbaric like death ending, but he said, “I can’t do that,” What? You can’t do that now? And I never thought I’d get hit in the back of my head right before I managed to escape from the terrible fate of Leah Prezis. “Why, do you want me to beg for you not to leave, on my knees?” When I saw a certain man’s persistent smile, there was only one thought that came to my mind. “No, he’s crazy!”","href":"i’ll-end-this-engagement33;-1240/","img":"https://likemanga.ink/upload/pages/2023/08/1691308613-64cf5245768a1-38e522e85a51190626a22e475c216039a70c3cec6008109699.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:649","statusDownload":-1,"time":1742711480499,"timeUpdateOnline":"","title":"I’ll End This Engagement!","type":"Manhua"},{"chapterUserReading":"-1","des":"After dying of illness, she has been reincarnated as Celine, the selfish, fat, villainous duchess, sister of the heroine of a popular novel. If she stays this way, she will be killed by the hero prince and die a miserable death, just as in the novel. She vows to reform herself with all her might and begins to struggle, but she finds herself caught up in unexpected doting and obsession..! Will Celine be able to find \"peaceful happiness\"? A fantasy love story about a reincarnation in another world where she is loved too much by a Yandere.","href":"the-finalboss-prince-is-somehow-obsessed-with-the-chubby-villainess-reincarnated-me-31577/","img":"https://likemanga.ink/upload/pages/2024/09/1726462577-66e7ba71333fe-optimize.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.3K","statusDownload":-1,"time":1742711480500,"timeUpdateOnline":"","title":"The Final-Boss Prince is Somehow Obsessed with the Chubby Villainess: Reincarnated Me","type":"Manhua"},{"chapterUserReading":"-1","des":"A spaceship in the shape of a horse-drawn carriage travels across the galaxy. Riding in the carriage is Ridley, the scientist who built this eccentric spaceship, and her partner Watari, a shy girl. The two leave Earth, which has become uninhabitable due to environmental pollution, and set off in the carriage. Their goal is to find a safe planet to settle. However, all the planets they visit are very strange! A planet with a god who can bring all things back to life, another planet where the luckiest people are considered the greatest, and a planet with countless libraries The two girls are sometimes thrown for a loop by these strange worlds","href":"shoujo-seikan-hyouryuuki-32926/","img":"https://likemanga.ink/upload/pages/2024/12/1735561235-67729013c64fe-shoujoseikanhyouryuuki.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:28","statusDownload":-1,"time":1742711480502,"timeUpdateOnline":"","title":"Shoujo Seikan Hyouryuuki","type":"Manhua"},{"chapterUserReading":"-1","des":"Tsubaki Imai is the kind of quiet girl you\u0027d never see in the center of attention. She doesn\u0027t really know how to talk to the cool kids at school like the loud boys and the bubbly girls, so she isn\u0027t exactly thrilled when she\u0027s assigned the seat next to Mamoru\u0027s, a big, unfriendly, and kind of scary guy who everyone at school seems to know. But, then, they both become class presidents, and as they start talking... This is a story about an ordinary girl who falls gradually in love...","href":"this-boy-in-class-11975/","img":"https://likemanga.ink/upload/pages/2023/11/1699274655-6548df9f3329d-0e3912ea9442e40ef1cda73da9736037da009c508501200177.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:149","statusDownload":-1,"time":1742711480502,"timeUpdateOnline":"","title":"This Boy in Class","type":"Manhua"},{"chapterUserReading":"-1","des":"Ryu-Yeon lost his father to a disease when he was only 10 years old. With the skill he learned from his father, he could carve wood into wonderfully intricate sculptures. One day, after completing the sculptures of his parents, Ryu-Yeon was greeted by an elderly man who was impressed by his sculptures. The old man saw promise in Ryu-Yeon and asked him if he would like to become his disciple. As Ryu-Yeon had nowhere to go and wanted to make the most of his life, he accepted the old man’s offer.","href":"lightning-degree-1391/","img":"https://likemanga.ink/upload/pages/2023/08/1691325809-64cf95718edf7-lightningdegree6692193x278.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:8.9K","statusDownload":-1,"time":1742711480503,"timeUpdateOnline":"","title":"Lightning Degree","type":"Manhua"},{"chapterUserReading":"-1","des":"The imperial family collapsed during one night by the basilisk, the summoned beast of darkness which was summoned by the cursed princess, Fleta. “If there is a next life, then… Can I really be your younger sister?” If I had approached you a little earlier, would it have been different from now? The last time everyone regretted it, the time miraculously returned to 6 years ago. If this is the second chance we’ve been given…","href":"my-beloved-baby-sister-7565/","img":"https://likemanga.ink/upload/pages/2023/08/1693451137-64f00381f2ada-d0aaa68c19adb60c6bd14ef87b38a863bb4971b27161024303.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:2.3K","statusDownload":-1,"time":1742711480504,"timeUpdateOnline":"","title":"My Beloved Baby Sister","type":"Manhua"},{"chapterUserReading":"-1","des":"Clara, who had been oppressed for many years by her tyrant sister, Enefia. Even their parents obeyed the sister\u0027s wishes, and Clara had no place in the Astraia Baron’s household despite it being her home. In the midst of this, Clara\u0027s sister\u0027s engagement to a prominent nobleman was decided, and Clara finally felt relieved, believing she would be freed from this hell. However, even after the engagement, the sister\u0027s unfaithful nature did not change, and fearing the fiance might discover the inconvenient truth, the parents ordered Clara to monitor her sister. Despite Clara\u0027s efforts, her sister became pregnant with another man\u0027s child. The engagement was broken off, and the sister quickly eloped somewhere, leaving the Astraia Baron’s household with a huge debt, angering the influential nobleman. In order to repay her family\u0027s debts, Clara was sold to a sadistic noble and faced severe torture, ultimately approaching death. \"If I could do it over again... This time, I will definitely kill you!\" When Clara opened her eyes again, time had rewound to the day of her sister’s engagement. Revived with strong determination, Clara pushed back against her sister\u0027s insidious bullying and ran to change the worst possible future.","href":"i-will-break-ties-with-the-harmful-sister-33469/","img":"https://likemanga.ink/upload/pages/2025/02/1738906394-67a59b1a8023e-50ea157110b0f0d7f23caf4dc21ba5a16d3006523605103791.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:750","statusDownload":-1,"time":1742711480504,"timeUpdateOnline":"","title":"I will break ties with the harmful sister","type":"Manhua"},{"chapterUserReading":"-1","des":"“You’re mine.” When Raphia met her demise after having been used and thrown away by her benefactor, Yuri, she went back nine years in the past. ‘I’m not going to relive that hell!’ Running away from her benefactor, she went to Kasein Soleia, Yuri’s archnemesis, and signed a new sponsorship contract with him. “I shall kill every single person you despise, Milord.” “The necessary role happens to be open, and you might just be the right person for it.” Young Duke. This is a sponsorship contract, right? But why . . . why are we getting married? * * * “Throughout the time I won’t be by your side . . . I will think of nothing but your small, cute head.” That low voice sent shivers down her spine. “I can’t believe you’re leaving. I’ll just . . .” Kasein looked at her sharply as if he was daring her to continue making up excuses. “You have to answer well, brat. Depending on what you say, all the wagon and shoe craftsmen of the Empire might lose their livelihood.” Despite his harsh words, Kasein’s touch was gentle. He couldn’t take his eyes off of Raphia, who strangely grew more beautiful by the day. 도망쳤더니 결혼을 하게 됐습니다","href":"i-ran-away-and-got-married-3499/","img":"https://likemanga.ink/upload/pages/2023/08/1691734491-64d5d1dbb0b15-d01809c5891d950b222b37fd695e4940ad61d69c1002143099.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.2K","statusDownload":-1,"time":1742711480505,"timeUpdateOnline":"","title":"I Ran Away and Got Married","type":"Manhua"},{"chapterUserReading":"-1","des":"Artyuuru, a boy reincarnated into another world, was born without any magical attribute, making him unable to use magic. Rejected by the noble Marquis family into which he was born, he ended up living in a remote village with his mother, Martine. Determined not to waste his second chance, he sets his sights on becoming an alchemist, overcoming countless challenges using knowledge from his past life. Follow Artyuuru as he uses intellect and creativity to tackle problems in this clever and inspiring alchemist’s journey!","href":"the-otherworldly-life-of-the-missing-alchemist~-34060/","img":"https://likemanga.ink/upload/pages/2025/03/1742695492-67df6c44838c4-cebba79380763d59aa81b48e31f5f86e077ff6426008829180.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:211","statusDownload":-1,"time":1742711481789,"timeUpdateOnline":"","title":"The Otherworldly Life of the Missing Alchemist~","type":"Manhua"},{"chapterUserReading":"-1","des":"The Sage Dwight, he along with the Hero defeated the Demon Lord who sank the world into darkness. However, they were falsely accused of becoming the next Demon Lords because of his power, and were thrown to The Valley of the Dead to die....... But though his flesh has rotten away, he lives on as a skeleton because of his grudge against the world. Dwight has vowed to deny that wrong world, and with a power that surpasses even the Demon King of the past, and also leading countless Skeletons he\u0027s going to start an all out war...!","href":"the-executed-sage-is-reincarnated-as-a-lich-and-starts-an-allout-war-8178/","img":"https://likemanga.ink/upload/pages/2023/09/1694228939-64fbe1cb3fad2-theexecutedsageisreincarnatedasalichandstartsanall.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.8K","statusDownload":-1,"time":1742711481790,"timeUpdateOnline":"","title":"The Executed Sage is Reincarnated as a Lich and Starts an All-Out War","type":"Manhua"},{"chapterUserReading":"-1","des":"After graduating from culinary high school, Hanbyul completed his training in the mountains. He gets a job as an intern at a luxury hotel restaurant, but He gets involved in various incidents in a hotel kitchen that is notorious for being strict... How will Hanbyul, a culinary genius, overcome this difficulty?","href":"cooking-go-34059/","img":"https://likemanga.ink/upload/pages/2025/03/1742695153-67df6af1e65be-cookinggo.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:78","statusDownload":-1,"time":1742711481792,"timeUpdateOnline":"","title":"Cooking Go","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"i-became-the-only-healer-in-this-world-21306/","img":"https://likemanga.ink/upload/pages/2024/05/1715230459-663c56fb82627-ibecametheonlyhealerinthisworld.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.4K","statusDownload":-1,"time":1742711481794,"timeUpdateOnline":"","title":"I Became the Only Healer in This World","type":"Manhua"},{"chapterUserReading":"-1","des":"Hiromi, a timid and quiet protagonist, was raised strictly by her grandmother. Due to her grandmother\u0027s abuse, Hiromi created an imaginary version of herself in the mirror, named \"Yumi,\" and would play by talking to her as a child. By the time Hiromi becomes a high school student, she only remembers playing with the mirror, but one day, she hears a voice from the mirror asking, \"Is what Grandma says really right?\" Triggered by this voice, Hiromi\u0027s alternate personality, \"Yumi,\" who can freely control Hiromi\u0027s body, begins to venture out into the night without Hiromi\u0027s knowledge... This is a suspenseful story about Hiromi confronting her true desires and her complicated relationship with her grandmother.","href":"mirror-of-janus-33722/","img":"https://likemanga.ink/upload/pages/2025/02/1740622216-67bfc988226a2-mirrorofjanus.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:337","statusDownload":-1,"time":1742711481795,"timeUpdateOnline":"","title":"Mirror of Janus","type":"Manhua"},{"chapterUserReading":"-1","des":"With the arrival of three chaebol members into general high schools, teachers and students will be transformed into ” brain fighting ” schools that seek power by surrendering to massive capital. Dan-geon, a genius, came to inherit the school’s rules. This World is Money And Power / 세상은 돈과 권력","href":"this-world-is-money-and-power-3321/","img":"https://likemanga.ink/upload/pages/2023/08/1691659871-64d4ae5f6171d-thisworldismoneyandpower7773193x278.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1K","statusDownload":-1,"time":1742711481798,"timeUpdateOnline":"","title":"This World is Money And Power","type":"Manhua"},{"chapterUserReading":"-1","des":"It’s a common scenario. There was a zombie outbreak. People built a safe zone in Busan, but with limited space and overflowing people, housing prices skyrocketed with overpopulation. (still) ‘I can’t even dream of buying my own house’. The main character of this story also has no home. Just like you who are reading this synopsis, (but) there is an organization called Zombie Slasher that makes money by hunting zombies. In order to get the money and have his own house, our protagonist decides to throw himself on the front line.","href":"zombie-x-slasher-2164/","img":"https://likemanga.ink/upload/pages/2023/08/1691461970-64d1a952de2bc-a4baac6725cec7dbd7568cd50e691722f442dae06006001639.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:2K","statusDownload":-1,"time":1742711481802,"timeUpdateOnline":"","title":"Zombie X Slasher","type":"Manhua"},{"chapterUserReading":"-1","des":"Sarimin is a jinn (spirit) who specializes in helping people get what they want at the price of their soul. In recent times, he’s been down on his luck, with fewer and fewer people seeming to believe in the power of spirits. With the help of his trusted monkey, Tuyul (a money-obsessed baby spirit), and Wasa, a human soul doomed to be a servant for eternity, Sarimin attempts to get back on his feet and adapt to the modern world. In Sarimin, we follow the titular character as he attempts to tempt a new generation of humans.","href":"tales-of-sarimin-the-jinn-3322/","img":"https://likemanga.ink/upload/pages/2023/08/1691659907-64d4ae83bf862-talesofsariminthejinn7474193x278.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:160","statusDownload":-1,"time":1742711481805,"timeUpdateOnline":"","title":"Tales of Sarimin the Jinn","type":"Manhua"},{"chapterUserReading":"-1","des":"After being betrayed by her lover, the sun god Moha meets a bitter death--but soon finds herself thrust back into her past in someone else\u0027s body. Two tiger spirits from Moha\u0027s past vie for her affection as she struggles against the looming tragedy that once ripped her heart--and the world--apart. As Moha navigates this unfamiliar world alone with no divine power, will she be able to change the tragic course of her life and find true love?","href":"goddess39;s-way-of-attacking-tigers-7762/","img":"https://likemanga.ink/upload/pages/2023/09/1693747136-64f487c02bf91-i426463.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:397","statusDownload":-1,"time":1742711481806,"timeUpdateOnline":"","title":"Goddess\u0027s Way of Attacking Tigers","type":"Manhua"},{"chapterUserReading":"-1","des":"Yeonji, a high school girl who tries to help her classmate from abuse, ends up making herself the target of a bully. Her struggles only seem to get worse until the new girl Hayeong steps in for support, declaring war on the bullies. But the more Hayeong fights against mistreatment, the more hostility she attracts, and she must fight her way to keep the ones she cares for safe.","href":"unstoppable-hayeong-7761/","img":"https://likemanga.ink/upload/pages/2023/09/1693747025-64f48751952a0-i403924.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:177","statusDownload":-1,"time":1742711481810,"timeUpdateOnline":"","title":"Unstoppable Hayeong","type":"Manhua"},{"chapterUserReading":"-1","des":"One morning, ten years of Yoon Dami\u0027s life vanished. It all began when she got entangled with a man who claimed to be a god. However, the god dismissed Dami, saying it had nothing to do with him. Then, he discovered the existence of a \"thing\" he had been searching for in Dami\u0027s household for a long time, and this began to change his relationship with Dami. But is it possible to mend a relationship that has already become so strained?","href":"disaster-is-always-nearby-27692/","img":"https://likemanga.ink/upload/pages/2024/07/1720360729-668a9f19b112c-disasterisalwaysnearby.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:414","statusDownload":-1,"time":1742711481812,"timeUpdateOnline":"","title":"Disaster is Always Nearby","type":"Manhua"},{"chapterUserReading":"-1","des":"One day the world became a game. Monsters are suddenly appearing and killing humans and humans have become players and must fulfill quests! A player that was given a second chance after the fall of mankind, Kim Sehan. Will he be able to beat the system that made the world into a mess?","href":"return-to-player-3666/","img":"https://likemanga.ink/upload/pages/2023/08/1691826275-64d738636b1c4-returntoplayer8194193x278.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:7.5K","statusDownload":-1,"time":1742711481815,"timeUpdateOnline":"","title":"Return to Player","type":"Manhua"},{"chapterUserReading":"-1","des":"Maru, my dog, has become a person. Maru is just a 5-year-old! A thoughtless puppy with infinite energy and curiosity of dogs and children ! Maruuu ! Where are you going again? [Happy neighbors and room days] 마루는 강쥐","href":"maru-is-a-puppy-3632/","img":"https://likemanga.ink/upload/pages/2023/08/1691815590-64d70ea649528-106e4ca9563a6c56961a140f0d57ca28293086da1602312566.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:250","statusDownload":-1,"time":1742711481816,"timeUpdateOnline":"","title":"Maru is a Puppy","type":"Manhua"},{"chapterUserReading":"-1","des":"Zhuo Yifan was a magic emperor or could be called a demon emperor because he had an ancient emperor’s book called the Book of the Nine Secrets, he was targeted by all the experts, and he was even betrayed and killed by his students. Then his soul enters and comes back to life in a family servant boy named Zhuo Fan. Because some demonic magic is holding him back, he must unite the child’s memories and cannot ignore the family and the mistress he serves. How can he lead this descending family back to the pinnacle of this continent! Fan From Heaven / Best Devil Housekeeper ; Demon Emperor Butler ; Demon Emperor Great Butler ; Demon Emperor Housekeeper ; Demonic Emperor ; Devil Butler ; Housekeeper is the Magic Emperor ; Magic Emperor ; Mo Huang Da Guan Jia ; The Devil Butler ; The Steward Demonic Emperor ; The Steward Demonic King ; Как демон-император стал дворецким ; 魔皇大管家 ; The Servant Is the Demon King?! ; Demon King Steward","href":"magic-emperor-3082/","img":"https://likemanga.ink/upload/pages/2023/08/1691625586-64d42872abb5d-magicemperor2233193x278.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:14.9K","statusDownload":-1,"time":1742711481818,"timeUpdateOnline":"","title":"Magic Emperor","type":"Manhua"},{"chapterUserReading":"-1","des":"Annie is a lonely girl who is afraid of mirrors, while Liam is a well-known model and actor. It may seem unlikely that two people with such different lives could relate to each other, but sometimes, people\u0027s external appearance doesn\u0027t reflect their true souls. This is the story of two broken hearts and their journey toward self-acceptance and love. This series contains themes regarding bullying, self-harm, and mental health and may not be suitable for all readers. And if you or someone you know is struggling or in crisis, please reach out for help at crisistextline.org.","href":"reflection-of-the-soul-23869/","img":"https://likemanga.ink/upload/pages/2024/06/1717305606-665c0106b3ce8-5episodelistmobile.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:161","statusDownload":-1,"time":1742711481819,"timeUpdateOnline":"","title":"Reflection of the Soul","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"children-of-vamfield-17701/","img":"https://likemanga.ink/upload/pages/2024/03/1710946222-65faf7aed6ece-childrenofvamfield.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:447","statusDownload":-1,"time":1742711481820,"timeUpdateOnline":"","title":"Children of Vamfield","type":"Manhua"},{"chapterUserReading":"-1","des":"Someone who could see existences others could not since his earliest days, ‘Bakha’. The year he turns 18, ever lonely Bakha comes to meet for the first time a kindred person who could see the same things he could, ‘Jindo’, as well as this person’s friends. One day, through Jindo the truth that Bakha is the ‘Moonchild’ who had reigned over spirits in the past is revealed and rumors arise as Bakha is targeted by countless spirits and ghosts A Kid Made of the Moon Child Made of Moon 달로 만든 아이","href":"moonmade-child-manhwa-315/","img":"https://likemanga.ink/upload/pages/2023/08/1691118591-64cc6bff7acdd-c573e71ce5b96abcdb9cdde1532fe512445448996901000221.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:162","statusDownload":-1,"time":1742711481822,"timeUpdateOnline":"","title":"Moonmade Child - Manhwa","type":"Manhua"},{"chapterUserReading":"-1","des":"Go Cheonsu is a game streamer who lived an ordinary unemployed life. He only has one viewer. One day, he was thrown into a real survival game as a player where the goal is staying alive. The 24-hour live survival streaming starts now!","href":"the-end-of-the-world-is-just-a-game-to-me-3355/","img":"https://likemanga.ink/upload/pages/2023/08/1691707771-64d5697bdaa0f-theendoftheworldisjustagametome4410193x278.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:3.3K","statusDownload":-1,"time":1742711481824,"timeUpdateOnline":"","title":"The End of the World is Just a Game to Me","type":"Manhua"},{"chapterUserReading":"-1","des":"Uju Hyeon dreams of living the ordinary life of a high school student, but his dream will never come true as he possesses special powers that others don’t have. One day, after being chased by an evil spirit, he is taken to the School of the Tiger and learns that he has a dragon orb in his body. Will Uju be able to protect himself and the dragon orb from evil spirits?","href":"return-of-the-gods-17276/","img":"https://likemanga.ink/upload/pages/2024/03/1710082196-65edc894b33d9-i412435.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1K","statusDownload":-1,"time":1742711481827,"timeUpdateOnline":"","title":"Return of the Gods","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"humanoido-manhwa-32171/","img":"https://likemanga.ink/upload/pages/2024/10/1729993809-671d9c51003a9-humanoido1jpg.JPG","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:125","statusDownload":-1,"time":1742711481829,"timeUpdateOnline":"","title":"Humanoido - Manhwa","type":"Manhua"},{"chapterUserReading":"-1","des":"The sword of my closest friend and trusted adjutant pierced my body. When I opened my eyes again, I had become a noble lady of the enemy kingdom. In an unfamiliar and weak stranger’s body, three year’s time was lost, in which my homeland was brought to ruin. I was unable to come to my senses because of the pain of betrayal and confusion of my identity. However, eventually I decided to live on as ‘Luciphella Aidine’, a noble who wields a sword. How the Knight Lives as a Lady / 그 기사가 레이디로 사는 법 / The Way That Knight Lives As A Lady / From A Knight To A Lady","href":"the-way-that-knight-lives-as-a-lady-1912/","img":"https://likemanga.ink/upload/pages/2023/08/1691417955-64d0fd630233e-thewaythatknightlivesasalady4648193x278.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:2K","statusDownload":-1,"time":1742711481830,"timeUpdateOnline":"","title":"The Way That Knight Lives As a Lady","type":"Manhua"},{"chapterUserReading":"-1","des":"Kyoko always thought she would end up getting married to her long-term boyfriend Kenichi. However, reality hits her like a ton of bricks when he decides to end their relationship and move to Kyushu without her. At the age of 24, she starts a new life in Tokyo, where she crosses paths with Yoichi at her workplace. His warmth tugs at her heart, and despite their 17-year age gap, she falls in love with him. However, fate has other plans, and when two other men shake up her love life, she must make the biggest decision of her life.","href":"it-rains-on-precious-days-3319/","img":"https://likemanga.ink/upload/pages/2023/08/1691659788-64d4ae0cee1dc-itrainsonpreciousdays7078193x278.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:177","statusDownload":-1,"time":1742711481835,"timeUpdateOnline":"","title":"It Rains on Precious Days","type":"Manhua"},{"chapterUserReading":"-1","des":"“Miss Shin, please work your night shift at my house from now on.” The workaholic vice president Jehu asks his secretary Yuna Shin four days after their company bans the night shift. Just like that, the two of them begin working together at night, but it doesn’t take long before their attention turns toward each other instead of work.","href":"our-night-shift-31769/","img":"https://likemanga.ink/upload/pages/2024/09/1727605853-66f92c5d5332e-7episodelistmobile.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:504","statusDownload":-1,"time":1742711481838,"timeUpdateOnline":"","title":"Our Night Shift","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"the-childe-31551/","img":"https://likemanga.ink/upload/pages/2024/09/1726231253-66e432d5d38d5-thechilde.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:2.6K","statusDownload":-1,"time":1742711481839,"timeUpdateOnline":"","title":"The Childe","type":"Manhua"},{"chapterUserReading":"-1","des":"Where do our souls travel when we dream? For the boy named Spider, dream worlds become reality when Nightmares come to steal the soul of the one he loves. Crossing dimensions to get her back, Spider must navigate a tricky web of fates as he joins the dreamwalkers.","href":"dreamwalker-manga-8251/","img":"https://likemanga.ink/upload/pages/2023/09/1694322208-64fd4e204f727-1dreamwalkerlandingpagemobile.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:154","statusDownload":-1,"time":1742711481840,"timeUpdateOnline":"","title":"Dreamwalker - Manga","type":"Manhua"},{"chapterUserReading":"-1","des":"After their parents\u0027 sudden passing, Gyeonwoo finds himself in the role of caregiver to his younger sister, who harbors a startling secret—she\u0027s the Demon Lord with plans for world domination! Undeterred, Gyeonwoo is committed to nurturing his sister with love and guidance. Join them in this unique tale as they navigate everyday life amid their extraordinary circumstances.","href":"my-little-sister-is-the-demon-lord33;-14928/","img":"https://likemanga.ink/upload/pages/2024/01/1704798674-659d29d208ae7-i412094.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:889","statusDownload":-1,"time":1742711481843,"timeUpdateOnline":"","title":"My Little Sister Is the Demon Lord!","type":"Manhua"},{"chapterUserReading":"-1","des":"In the year 2200, the age-old tradition of samurai has evolved into a riveting fusion of sport and spectacle. Tokyo stands as the thrilling epicenter of this melee, its cityscape an open arena for licensed samurai to engage in intense duels, their clashes recorded and broadcasted for the world to witness. Young and ambitious Tomoe Harada finally seizes her samurai license, stepping into this vibrant battlefield. But her dreams extend beyond simply being one of the world\u0027s leading samurai. She seeks to challenge a certain someone... However, Tokyo teems with formidable challengers, each wielding unique fighting styles that can shatter dreams of glory. Can Tomoe and her companions rise to the challenge and etch their legacy in the chronicles of samurai history?","href":"samurai-no-tora-7755/","img":"https://likemanga.ink/upload/pages/2023/09/1693745767-64f4826734f31-samurainotora.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:64","statusDownload":-1,"time":1742711481845,"timeUpdateOnline":"","title":"Samurai no Tora","type":"Manhua"},{"chapterUserReading":"-1","des":"A warm and sometimes hard romantic comedy between the wife of a Kuudere magical girl (*30 years old) and her fan husband!","href":"my-wife-could-be-a-magical-girl-12506/","img":"https://likemanga.ink/upload/pages/2023/11/1700221902-655753ce30eb0-mywifecouldbeamagicalgirl.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:191","statusDownload":-1,"time":1742711481847,"timeUpdateOnline":"","title":"My Wife Could Be A Magical Girl","type":"Manhua"},{"chapterUserReading":"-1","des":"She transmigrated into the barely mentioned extra character \u0027Luberia.\u0027 Of all things, it had to be in the wretched novel \"Becoming the Emperor,\" filled with war and disasters, where the heroine sacrifices herself for the hero and everyone dies! She had planned to hide her strength and live delicately and quietly, but... The male lead, \u0027Caesar,\u0027 keeps seeking Luberia out, and even goes so far as to propose marriage, expressing a desire to keep her by his side. Luberia, not wanting to meet the same fate as the heroine, tries her best to avoid Caesar, but due to his formidable appearance and persistence, she finds herself engaged to him before she knows it. Can Luberia survive without loving Caesar until the end?","href":"the-hero-is-trying-to-change-the-heroine-14214/","img":"https://likemanga.ink/upload/pages/2023/12/1702485313-6579dd4114ff0-ec6770cdcd89473f917a13e34966168b34b35cf62403434169.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.5K","statusDownload":-1,"time":1742711481851,"timeUpdateOnline":"","title":"The Hero is Trying to Change the Heroine","type":"Manhua"},{"chapterUserReading":"-1","des":"I recalled memories of my past life after Grandfather told me my engagement was annulled. At the same time, I realized this world was the same world as in my favorite shoujo manga. The villainess who exhausted every method possible to bully the heroine… I reincarnated as that villainess’ chubby follower. I shook upon remembering the future lined up for her. When the villainess’ evil deeds came to light, she pinned all her crimes on Britney. I was a character that gets executed. To reliably avoid this, I must not become the villainess’ follower. As this villainess only keeps those who are exceptionally uglier than her by her side, I may be able to do something if I slim up. For now, let’s go on a diet!","href":"i-reincarnated-as-a-white-pig-noble39;s-daughter-from-a-shoujo-manga-reboooot33;-32931/","img":"https://likemanga.ink/upload/pages/2024/12/1735561645-677291ada2baf-ireincarnatedasawhitepignoblesdaughterfromashoujom.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:376","statusDownload":-1,"time":1742711483362,"timeUpdateOnline":"","title":"I Reincarnated as a White Pig Noble\u0027s Daughter from a Shoujo Manga reBoooot!","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"there-is-no-counterattack-from-the-supporting-character-31455/","img":"https://likemanga.ink/upload/pages/2024/09/1725540374-66d9a816ed807-975a494f2f593194cfc359feb6e39da6186820bc3845187223.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.2K","statusDownload":-1,"time":1742711483363,"timeUpdateOnline":"","title":"There Is No Counterattack From the Supporting Character","type":"Manhua"},{"chapterUserReading":"-1","des":"Chu Wenshan, the world’s top master, has lost his memory. The only clue about him is a kidnapping letter… huh? Is the person who got kidnapped really my brother? Wait, who even is my brother? No, I’m going to save him even if I don’t know him. Excuse me, friend, have you seen my brother?","href":"have-you-seen-my-brother-official-5299/","img":"https://likemanga.ink/upload/pages/2023/08/1692520281-64e1cf594c094-haveyouseenmyyoungerbrother193x278.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:336","statusDownload":-1,"time":1742711483364,"timeUpdateOnline":"","title":"Have You Seen My Brother Official","type":"Manhua"},{"chapterUserReading":"-1","des":"When I opened my eyes, I found myself in a crate about to be sold as a slave in an auction. It was going well when the novel’s male lead burst in and saved me, but all of a sudden, this man asked me to marry him. “” Please be my wife and show this empire your worst behaviour, so wicked that no one would dare to approach me when they see you.”” “” What’s in it for me?”” “” I’ll give you 10 billion.”” What the F..X..? Welcome, dear customer! I would gladly uphold the ‘crazy bitch’ reputation to drive away those stalker fans just to live a comfortable life. However- “” I can’t imagine my life without you now.”” Seems like I somehow failed to protect the male lead, and instead acquired him for myself! Will acting as a villainess with all my might bring me money, power, fame, and even love?","href":"the-archduke’s-gorgeous-wedding-was-a-fraud-2762/","img":"https://likemanga.ink/upload/pages/2023/08/1691545152-64d2ee408063a-2ce2ca0a4902e82c3f418a5da384d8da905f5f727201030428.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:2.5K","statusDownload":-1,"time":1742711483366,"timeUpdateOnline":"","title":"The Archduke’s Gorgeous Wedding Was a Fraud","type":"Manhua"},{"chapterUserReading":"-1","des":"The virtual reality game, Olympus. A means to support reality after all the knowledge and records accumulated by mankind had disappeared overnight. ‘My real life starts now!’ Absolute evil appears in such a world!","href":"max-level-player-1785/","img":"https://likemanga.ink/upload/pages/2023/08/1691401819-64d0be5b7704d-maxlevelplayer2499193x278.png","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:7.4K","statusDownload":-1,"time":1742711483366,"timeUpdateOnline":"","title":"Max Level Player","type":"Manhua"},{"chapterUserReading":"-1","des":"A worker at a Japanese arcade meets a young girl from England, who he strikes up a friendship with.","href":"geesen-shoujo-to-ibunka-kouryuu-11784/","img":"https://likemanga.ink/upload/pages/2023/11/1699082331-6545f05bbe187-geesenshoujotoibunkakouryuu.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:364","statusDownload":-1,"time":1742711483367,"timeUpdateOnline":"","title":"Geesen Shoujo to Ibunka Kouryuu","type":"Manhua"},{"chapterUserReading":"-1","des":"One day, Taro Yamada, who runs a detective business, slips on a banana peel and reincarnates into Tsukushi Shikizaki, the younger brother of three beautiful big breasted sisters who will all die on the same day. As he spends time surrounded by the three beautiful sisters, he finds out that the boy he is reincarnated as will be killed by one of the three sisters ...!?","href":"the-shikisaki-sisters-want-to-be-exposed-17907/","img":"https://likemanga.ink/upload/pages/2024/03/1711282025-6600176975076-theshikisakisisterswanttobeexposed.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:455","statusDownload":-1,"time":1742711483367,"timeUpdateOnline":"","title":"The Shikisaki Sisters Want To Be Exposed","type":"Manhua"},{"chapterUserReading":"-1","des":"For incompetence, Lewin, a Demon-Tamer adventurer, was banished from the heros party. Without being acknowledged for his achievements as a commanding officer... However, the moment he comes into contact with Sasha, the Demon King of Death, one of the sealed Seven Demon Kings, he awakens to become a Demon King with the ability to subjugate Demon Kings! Moreover, by shattering the seal, he tames the Demon King, Sasha Lewin, backed by Sasha, succeeds in drawing out the Demon Kings power and works to subdue all Demon Kings, the root of the strife between the humans and the demons. An overwhelming fantasy of warriors by the boy who rules the Demon King begins.","href":"maou-tsukai-no-saikyou-shihai-21664/","img":"https://likemanga.ink/upload/pages/2024/05/1715506663-66408de76660b-maoutsukainosaikyoushihai.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:349","statusDownload":-1,"time":1742711483368,"timeUpdateOnline":"","title":"Maou Tsukai no Saikyou Shihai","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"i-became-a-human’s-daughter-33758/","img":"https://likemanga.ink/upload/pages/2025/03/1740909201-67c42a915f814-ibecameahumansdaughter.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.6K","statusDownload":-1,"time":1742711483369,"timeUpdateOnline":"","title":"I Became a Human’s Daughter","type":"Manhua"},{"chapterUserReading":"-1","des":"Reincarnated as Elia, the daughter of a ruined noble, the protagonist struggles to escape debt collectors. One day, she saves a child from an attack, only to be mistaken for a kidnapper and taken to Duke Kaidens mansion. To avoid punishment, she becomes the childs nanny. Now, she must clear the misunderstanding and find a way to survive in her new life.","href":"i-became-the-mother-of-the-submale-lead’s-son-33935/","img":"https://likemanga.ink/upload/pages/2025/03/1741997091-67d4c4231b38c-ibecamethemotherofthesubmaleleadsson.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.5K","statusDownload":-1,"time":1742711483369,"timeUpdateOnline":"","title":"I Became the Mother of the Sub-Male Lead’s Son","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"i’m-a-saintess-but-i-refuse-to-work33;-33539/","img":"https://likemanga.ink/upload/pages/2025/02/1739405042-67ad36f231ae1-imasaintessbutirefusetowork.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:694","statusDownload":-1,"time":1742711483370,"timeUpdateOnline":"","title":"I’m a Saintess But I Refuse to Work!","type":"Manhua"},{"chapterUserReading":"-1","des":"Cute love story of two girls who like their senpai illustrated by Yom on his twitter","href":"senpai-is-mine-9871/","img":"https://likemanga.ink/upload/pages/2023/10/1697026812-652692fcda464-senpaiismine.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:142","statusDownload":-1,"time":1742711483370,"timeUpdateOnline":"","title":"Senpai is Mine","type":"Manhua"},{"chapterUserReading":"-1","des":"Bai Yue, a girl who has been confined in a sanatorium since childhood, unexpectedly escapes and finds herself transported 2,000 years into the future, into a world dominated by beastmen. She is bought by a powerful and handsome beastman named Lang Xiao, who treats her with great care, even enlisting a “bear nanny” to help look after her. However, as she starts to enjoy her life as a pampered “pet,” she begins to notice that her master’s affection may be crossing some boundaries. Her struggles to maintain her dignity while navigating this bizarre new world make for an intriguing and humorous story.","href":"clumsy-beasts-you’ve-crossed-the-line33;-official-33253/","img":"https://likemanga.ink/upload/pages/2025/01/1737680143-6792e50fb9d97-22c73cf2fd9000c9048aee96655521e9206e48d06008007457.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.6K","statusDownload":-1,"time":1742711483371,"timeUpdateOnline":"","title":"Clumsy Beasts You’ve Crossed the Line! Official","type":"Manhua"},{"chapterUserReading":"-1","des":"[You will be the cornerstone of a new mythology. For the sake of that mythology, I will grant you another chance.] The last successor of a fallen founding contributor family and cursed third-rate mage, Russel Raymond. He hoped to revive his family’s societal status, but was expelled from the academy. All he could do was work as a mercenary third-rate mage. One day, on his way to his temporary job, his mother’s memento ring, the “Dragon’s Heart,” reacts, and Russel is given an unexpected chance. He “regresses” back to his days in the academy. [You have received a mana stone (consumable) as a mission reward.] That is how Russel begins soaring in life. Like a dragon who never got to spread his wings. He crosses the waves called fate that had pressed down on him and flies into the bright world he was previously banned from.","href":"the-mage-swallowed-the-dragon-4190/","img":"https://likemanga.ink/upload/pages/2023/08/1692063351-64dad677e574e-dragondevouringmage193x278.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:7.1K","statusDownload":-1,"time":1742711483372,"timeUpdateOnline":"","title":"The Mage: Swallowed the Dragon","type":"Manhua"},{"chapterUserReading":"-1","des":"The virtuous will definitely be rewarded!This world judges the deeds and good karma of your previous life, and grants you a rank when you are reborn. The benevolent man, even surprising the gods through this, decides to be reborn as the son Alexander of a noble family, and thus starts his SSS-Rank life! Follow Alec\u0027s journey as he lives his life as a SSS Rank!!","href":"as-a-virtuous-middleaged-man-my-new-life-was-confirmed-to-be-sss-rank-9561/","img":"https://likemanga.ink/upload/pages/2023/10/1696291931-651b5c5b4c1f3-asavirtuousmiddleagedmanmynewlifewasconfirmedtobes.png","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.6K","statusDownload":-1,"time":1742711483374,"timeUpdateOnline":"","title":"As A Virtuous Middle-Aged Man My New Life Was Confirmed To Be Sss Rank","type":"Manhua"},{"chapterUserReading":"-1","des":"Ronan lived a wasteful life filled with regrets. A second chance befalls him at the end of his futile life. He went back to the time when he was a ten-year-old child! For the people who sacrificed themselves for him, he becomes determined to live a new life.","href":"academy’s-genius-swordmaster-3273/","img":"https://likemanga.ink/upload/pages/2023/08/1691656601-64d4a1992e1fb-replicatepredictionvl2hajjbgudda4cvzc7qwxj3iy193x2.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:20.8K","statusDownload":-1,"time":1742711483374,"timeUpdateOnline":"","title":"Academy’s Genius Swordmaster","type":"Manhua"},{"chapterUserReading":"-1","des":"22-year-old worker reminisces with old friends during graduation season momentary joke is believed by the God of Reincarnation, who sends Ren Zheng and Graduation Season to a fantasy world, where they are reincarnated as an [Angel] and a [Devil] respectively, and embark on various funny and exciting adventures.","href":"fantasy-world-passerby-31368/","img":"https://likemanga.ink/upload/pages/2024/08/1724846918-66cf134620bda-fantasyworldpasserby.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:268","statusDownload":-1,"time":1742711483374,"timeUpdateOnline":"","title":"Fantasy World Passerby","type":"Manhua"},{"chapterUserReading":"-1","des":"Vivian, an evil woman called the old castle witch. After committing all kinds of crimes, he was finally killed by the revolutionary forces. Just before her death, the Dusk Witch appears in front of her and returns Vivian to three years ago, leaving a meaningful message. After vowing never to lose her loved ones again, Vivian rose to power.","href":"charlotte’s-wheel-706/","img":"https://likemanga.ink/upload/pages/2023/08/1691194591-64cd94df92ca2-254eb20a206cb13a503a4f5c9c7ab8e63212c81e9601359382.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:343","statusDownload":-1,"time":1742711483375,"timeUpdateOnline":"","title":"Charlotte’s Wheel","type":"Manhua"},{"chapterUserReading":"-1","des":"Here, inside this martial arts novel, there is a true teacher who teaches the arrogant male lead and awakens him through death. Handsome, good-natured, righteous, strong, and… Anyway, there was one big flaw in the male lead’s damn fine teacher. It was his foolish only daughter who was filled with greed. A tenacious villainess extra, who always comes back to haunt the male lead in every way, but cannot be abandoned because she is his teacher’s daughter. Throughout reading the novel, I cursed at that daughter. Saying that if it was me, I wouldn’t live like that. ‘But that didn’t mean that I wanted to be her!’ What was worse, Father has already died, and my reputation is the worst. Inevitably, I ran away, but… I died. However, when I opened my eyes, Father was alive!? ‘If so, in this life, I will definitely save Father!’ However… “To think they’re aiming at my granddaughter!? I’ll kill them all!” Why do I see Grandfather, who doesn’t even appear many times throughout the novel, so often like this? “Marriage? No. Yeonie said that she would live by my side for the rest of her life.” Even Father, somehow became weird. Moreover, “Why do you keep avoiding me? Is this also my mistake?” Isn’t the main character suddenly becoming obsessed with me? “Originally, I was destined to die. Until you came here.” I saved the time-limited bastard, but isn’t it that no good deed goes unpunished? “At least when I’m in front of you… I don’t think I’m tr*sh.” The villain who blew off my neck is suddenly trying to repent. Is it really okay if it’s like this? 무림세가 천대받는 손녀딸이 되었다 / I Became the Despised Granddaughter of the Powerful Murim Family / I Became the Despised Granddaughter of the Murim Clan / The Baengri Clan’s Unwanted Granddaughter","href":"i-became-the-despised-granddaughter-of-the-powerful-martial-arts-family-5924/","img":"https://likemanga.ink/upload/pages/2023/08/1692694222-64e476ce3c90d-82b688adc243e23c225b07a753b132203663abe47201030275.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:5.8K","statusDownload":-1,"time":1742711483375,"timeUpdateOnline":"","title":"I Became the Despised Granddaughter of the Powerful Martial Arts Family","type":"Manhua"},{"chapterUserReading":"-1","des":"I Really Don’t Want to Be the First manhua, After many rounds of death verification, Xu Xiaowen found himself with the first BUFF no matter what will easily take the first, and then the day will die a violent death. This time, Xu Xiaowen made a wish. He must be a loser, try to live until the age of eight! However, the heavens played a joke on him again, he is actually an all-powerful superpower? Wo Zhen De Bu Xiang Dang Di Yi I Really Don’t Want to Be the First I Truly Don’t Want to Become Number 1 Wo Zhen De Bu Xiang Dang Di Yi","href":"i-really-don’t-want-to-be-the-first-2846/","img":"https://likemanga.ink/upload/pages/2023/08/1691548746-64d2fc4ab7996-ireallydontwanttobethefirst9275.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.4K","statusDownload":-1,"time":1742711483376,"timeUpdateOnline":"","title":"I Really Don’t Want to Be the First","type":"Manhua"},{"chapterUserReading":"-1","des":"A girl, neglected by her father after her mother’s death, has a secret: she can see ghosts. They’ve been her only friends. When forced to move to a notorious duke’s estate, she decides to get herself disowned as quickly as possible to return to her old life.","href":"i-became-the-daughter-of-a-ghost-duke-34006/","img":"https://likemanga.ink/upload/pages/2025/03/1742352986-67da325a9a20b-2d897b4927a6f2ba11ea9d1f4df46633b3fd93926008581486.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.5K","statusDownload":-1,"time":1742711483377,"timeUpdateOnline":"","title":"I Became the Daughter of a Ghost Duke","type":"Manhua"},{"chapterUserReading":"-1","des":"One day, the end of the world suddenly came. [The absolute being in the corner of the house cannot leave the corner of the house] You must survive to save your family.","href":"the-ultimate-shutin-32583/","img":"https://likemanga.ink/upload/pages/2024/11/1732928768-674a650050b54-theultimateshutin.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:6.1K","statusDownload":-1,"time":1742711483377,"timeUpdateOnline":"","title":"The Ultimate Shut-In","type":"Manhua"},{"chapterUserReading":"-1","des":"The earth is affected by unknown energy, the core expands, and natural disasters and doomsday come. Extreme heat, earthquakes, volcanic eruptions, floods, severe cold... natural and man-made disasters come one after another! Su Chen struggled through the apocalypse and finally entered the safe zone, but was betrayed by his girlfriend in the end! Reborn and returned to one month before the end. This time, I only live for myself!","href":"the-doomsday-ruthless-man-hoarding-trillions-of-supplies-at-the-beginning-16460/","img":"https://likemanga.ink/upload/pages/2024/02/1709023410-65dda0b29b6ad-thedoomsdayruthlessmanhoardingtrillionsofsuppliesa.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:5.4K","statusDownload":-1,"time":1742711483378,"timeUpdateOnline":"","title":"The doomsday ruthless man: hoarding trillions of supplies at the beginning","type":"Manhua"},{"chapterUserReading":"-1","des":"The earth is affected by unknown energy, the core expands, and natural disasters and doomsday come. Extreme heat, earthquakes, volcanic eruptions, floods, severe cold... natural and man-made disasters come one after another! Su Chen struggled through the apocalypse and finally entered the safe zone, but was betrayed by his girlfriend in the end! Reborn and returned to one month before the end. This time, I only live for myself!","href":"the-doomsday-ruthless-man-hoarding-trillions-of-supplies-at-the-beginning-16460/","img":"https://likemanga.ink/upload/pages/2024/02/1709023410-65dda0b29b6ad-thedoomsdayruthlessmanhoardingtrillionsofsuppliesa.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:5.4K","statusDownload":-1,"time":1742711484910,"timeUpdateOnline":"","title":"The doomsday ruthless man: hoarding trillions of supplies at the beginning","type":"Manhua"},{"chapterUserReading":"-1","des":"The virtual reality game “History of the Archana Continent” became part of reality, and “players” who were synchronized with humans appeared to protect the world. Lee Hoyeol, who was an ordinary salaryman, took over the body of the character he created in middle school, “Grandfell Claudi Arpeus Romeo.” Under normal circumstances, it would have been an absolute failure of a career, but Grandfell, whose occupation is a “demon hunter,” becomes extremely proud in front of demons! The only demon hunter in this world, Grandfell (\u003d Lee Hoyeol) starts to make a move!","href":"the-player-hides-his-past-4179/","img":"https://likemanga.ink/upload/pages/2023/08/1692055911-64dab96739057-theplayerhideshispast193x278.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:11K","statusDownload":-1,"time":1742711484911,"timeUpdateOnline":"","title":"The Player Hides His Past","type":"Manhua"},{"chapterUserReading":"-1","des":"A space series about a protagonist who continually fights against all the aliens who are trying to take his life.","href":"dai-dark-9681/","img":"https://likemanga.ink/upload/pages/2023/10/1696515670-651ec656acfda-181583498903.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:348","statusDownload":-1,"time":1742711484911,"timeUpdateOnline":"","title":"Dai Dark","type":"Manhua"},{"chapterUserReading":"-1","des":"In the future, humanity has successfully left Earth and colonized various star systems, evolving into a new breed of humans who are taller and possess incredibly long lifespans. Meanwhile, Earth, the once-thriving mother planet, has been reduced to a nuclear wasteland due to overdevelopment and severe pollution. The original inhabitants still living on Earth now face an average lifespan of just 40 years, leading to widespread discrimination from the new humans. The protagonist is one of these Earth natives, but unlike others who have succumbed to despair, he works hard to become a mechanic even more skilled than the new humans. Just when he thought he could finally live a better life, he is met with betrayal and treated as cannon fodder when the cosmic insect race attacks a human outpost. However, with a burning desire for revenge, the protagonist discovers that he has been reborn as one of the cosmic insects!","href":"my-clone-is-the-space-bug-king-30620/","img":"https://likemanga.ink/upload/pages/2024/08/1723469099-66ba0d2b1ec7f-mycloneisthespacebugking.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.1K","statusDownload":-1,"time":1742711484913,"timeUpdateOnline":"","title":"My Clone is the Space Bug King","type":"Manhua"},{"chapterUserReading":"-1","des":"Lin Qinghan’s grandfather (her father’s father) is facing an imminent danger. His relatives disregarded the stability of Lin conglomerate and used various despicable means to inherit properties owned by him. President Qinghan was framed in the process. However, her husband, Zhang Xuan, who owns the title of “Satan” among the Lords of Dragon King Temple, is resolving everything one by one. 龙王殿 / Dragon King Hall","href":"temple-of-dragon-king-4168/","img":"https://likemanga.ink/upload/pages/2023/08/1692019916-64da2ccc2c804-templeofdragonking4813193x278.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.3K","statusDownload":-1,"time":1742711484931,"timeUpdateOnline":"","title":"Temple of dragon king","type":"Manhua"},{"chapterUserReading":"-1","des":"I remember the memory of my previous life when I was abused by my father for the experiment. And I realized. According to my previous life This is the world of fantasy fiction I’ve read That she was born with a minor role who died before the novel even started. Ariadne thought calmly. ‘I am screwed’.She was also screwed on a global basis. ‘This novel has a bad ending.’ The end of this 10-volume Munchkin(over powered) fantasy novel is, It was the failure of the protagonist and the destruction of the world. 주인공의 구원자가 될 운명입니다 It’s My Destiny to Be Hero’s Savior","href":"the-hero39;s-savior-887/","img":"https://likemanga.ink/upload/pages/2023/08/1691225206-64ce0c762b66f-08b5d25b7a005d03fe9f762f29a80ef99011d5934806801204.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:3K","statusDownload":-1,"time":1742711484934,"timeUpdateOnline":"","title":"The Hero\u0027s Savior","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"i-will-raise-this-family-up-33953/","img":"https://likemanga.ink/upload/pages/2025/03/1742084030-67d617be9cfde-iwillraisethisfamilyup.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:5.5K","statusDownload":-1,"time":1742711484936,"timeUpdateOnline":"","title":"I Will Raise This Family Up","type":"Manhua"},{"chapterUserReading":"-1","des":"[By the studio that brought you and !] I never thought I could become a hunter. I never thought I’d get the chance. But that wasn’t the case. 「 The ‘Tower of Trials’ has selected all suitable candidates from Earth. 」 「 Please select your difficulty. 」 「 The rewards you get will be directly proportional to your chosen difficulty. 」 I was given a chance just now. A special one, at that.","href":"boundless-necromancer-3288/","img":"https://likemanga.ink/upload/pages/2023/08/1691657070-64d4a36ebc055-boundlessnecromancer7920193x278.png","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:10.7K","statusDownload":-1,"time":1742711484937,"timeUpdateOnline":"","title":"Boundless Necromancer","type":"Manhua"},{"chapterUserReading":"-1","des":"Ms. Pervaz, who led the war to victory at the age of 28 “Asha Pervaz”. For the long war-ravaged Pervaz Asha went to the imperial family to receive the victory reward promised by the Emperor. However, the only reward it returned was the «The right to choose a marriage partner». As a better option, Asha referred to the “Duke of Carlisle Haven”, the first prince recently denied the title of crown prince. If he refused, she intended to get alimony from the emperor, but… “Marquise Pervaz, I will accept your marriage offer.” Contrary to expectations, Duke Carlisle accepted Asha’s choice as his wife, and promised tremendous support to Pervaz.. ! read at kaiscans.com to support us!","href":"city-of-arrogance-6755/","img":"https://likemanga.ink/upload/pages/2023/08/1692941445-64e83c85055d3-6b279ac3785e05ec931731c2422041ef189c379e1000150034.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:7.4K","statusDownload":-1,"time":1742711484938,"timeUpdateOnline":"","title":"City of Arrogance","type":"Manhua"},{"chapterUserReading":"-1","des":"Eve, trapped in the cursed Tower of Babel, endlessly dies and revives as she struggles to escape and uncover the truth.","href":"underground-of-babel-official-33791/","img":"https://likemanga.ink/upload/pages/2025/03/1741081907-67c6cd3386506-808fd6a3793779ddf61b0c2a57bfbcd52d7ca7672704002427.png","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:507","statusDownload":-1,"time":1742711484939,"timeUpdateOnline":"","title":"Underground of Babel Official","type":"Manhua"},{"chapterUserReading":"-1","des":"Ha-jeong, a high school girl living an unhappy life,her only pleasure is spying on the daily life of influencer \u0027Daldalun\u0027. Ha-jeong\u0027s affection for her reaches an obsessive level, and she even hacks into her home\u0027s wall pad to spy on even her most private life. One day, she was peeking into Daldalun\u0027s room as usual. Ha-jeong witnesses Daldalun\u0027s death, and the next day she finds herself possessed by her dead body... . 2023 Greatest Contest on Earth, 1st Excellence Award Winner.","href":"the-city-where-the-moon-doesn39;t-rise-20197/","img":"https://likemanga.ink/upload/pages/2024/04/1714125441-662b7a81145ed-9900d8f26c45b74945d9289a4c9905fca63a460e7121432278.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:37","statusDownload":-1,"time":1742711484941,"timeUpdateOnline":"","title":"The city where the moon doesn\u0027t rise","type":"Manhua"},{"chapterUserReading":"-1","des":"Toto is a novice hero who has finally put together the team that he\u0027d always wanted. And he\u0027s ready to set out on a new adventure. But Toto\u0027s new party members\u0027 actual target is... his life?!","href":"the-fainted-hero-and-the-assassination-princess-7830/","img":"https://likemanga.ink/upload/pages/2023/09/1693875832-64f67e78a1b49-i423328.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:247","statusDownload":-1,"time":1742711484942,"timeUpdateOnline":"","title":"The Fainted Hero and The Assassination Princess","type":"Manhua"},{"chapterUserReading":"-1","des":"Unexpectedly, I grabbed the collar of the blind beast.Grand Duke Eléon Clevent fell into the abyss from the Empire’s Greatest Knight. Rona succeeded in making Eléon, who is obsessed with anger and frustration, into a human being again.Soon after, Rona found her family and left his side.… When the Grand Duke’s eyes were healed, he was desperately searching for her through the entire empire.“Young Lady, have we met somewhere?”“It’s my first time meeting you, Your Highness.”","href":"i-grabbed-the-leash-of-the-blind-beast-24053/","img":"https://likemanga.ink/upload/pages/2024/06/1717475629-665e992d653fe-cce4e10394559bc50453fb1858f5c899e95b755d7091024141.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:2.6K","statusDownload":-1,"time":1742711484943,"timeUpdateOnline":"","title":"I Grabbed The Leash Of The Blind Beast","type":"Manhua"},{"chapterUserReading":"-1","des":"Shirai Ran was just your average nurse in her old world, but after her unfortunate demise, she found herself reincarnated into Sekkakoku—a kingdom where imperial courts hold immense influence. Now living as Byakuran, she decides to use her memories and modern medical knowledge to cure the sick and injured. However, it\u0027s not long before rumors of the \"great mender\" with incredible powers reach the ears of a certain Prince Kuryu. In a shocking turn of events, the emperor-to-be snatches her away and gives her an order—become his consort, and cure him of his peculiar illness!","href":"the-healer-consort-33809/","img":"https://likemanga.ink/upload/pages/2025/03/1741180911-67c84fefb674e-76a7a7b548c5fbc574ed3fb432346d99a3452e696008531050.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:649","statusDownload":-1,"time":1742711484943,"timeUpdateOnline":"","title":"The Healer Consort","type":"Manhua"},{"chapterUserReading":"-1","des":"Awakener of the Water Clan. I was called as the disgrace of the duke of Elheim and was used as a sacrifice for my twin. In this life, I gave up everything and left the family holding the villain’s hand. I rescued the patriarch of the villain family, the former duke, and the heir one after another. But the villains are acting weird. “Lili, do you want me to buy you the Imperial Palace?” “Liarte, Grandpa brought some candy.” “I told you this, you’re the only one for me.” Somehow everyone seems to be tamed, maybe it’s a mistake…….?","href":"i-was-the-real-owner-of-elheim-25931/","img":"https://likemanga.ink/upload/pages/2024/06/1718979489-66758ba13385b-e4db9ae063f59257abdd7bd0c0a7c2ea7267e3551080164221.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:4.5K","statusDownload":-1,"time":1742711484944,"timeUpdateOnline":"","title":"I Was the Real Owner of Elheim","type":"Manhua"},{"chapterUserReading":"-1","des":"Shinonome Yuuya, a failure at the prestigious Yuunagi Academy. Hitsugi Akari, the top student of the year, is also a loner like him. Despite being opposites in many ways, they share a certain similarity. Suddenly, the two of them fall deep into the underground of the academy and get caught up in the games of the hidden world beneath Yuunagi Academy, Yomosugara Academy!! In a school where an eternal night reigns, the games are played in pairs, and the rewards are the mysteries of this world and their own past memories!! Will they be able to uncover the truth of this world? A survival game school suspense where memory and trust are the key!","href":"memento-game-33289/","img":"https://likemanga.ink/upload/pages/2025/01/1737851209-67958149d3fa2-mementogame.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:71","statusDownload":-1,"time":1742711484947,"timeUpdateOnline":"","title":"Memento Game","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"global-beast-tamer-i-can-see-the-path-of-evolution-32921/","img":"https://likemanga.ink/upload/pages/2024/12/1735560828-67728e7c497f3-globalbeasttamericanseethepathofevolution.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:4.3K","statusDownload":-1,"time":1742711484948,"timeUpdateOnline":"","title":"Global Beast Tamer: I Can See the Path of Evolution","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"forging-an-industrial-empire-in-a-magical-world-32150/","img":"https://likemanga.ink/upload/pages/2024/10/1729924199-671c8c67dd03f-forginganindustrialempireinamagicalworld.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:5.8K","statusDownload":-1,"time":1742711484948,"timeUpdateOnline":"","title":"Forging an Industrial Empire in a Magical World","type":"Manhua"},{"chapterUserReading":"-1","des":"The story of a boy and his would-be bully, who is comically inept at being mean to him.","href":"bimyou-ni-yasashii-ijimekko-18911/","img":"https://likemanga.ink/upload/pages/2024/04/1712571102-6613c2de5d9a2-bimyouniyasashiiijimekko.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:150","statusDownload":-1,"time":1742711484951,"timeUpdateOnline":"","title":"Bimyou Ni Yasashii Ijimekko","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"the-young-genius-paintress-29820/","img":"https://likemanga.ink/upload/pages/2024/08/1722665441-66adc9e133e6d-resource.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:233","statusDownload":-1,"time":1742711484952,"timeUpdateOnline":"","title":"The Young Genius Paintress","type":"Manhua"},{"chapterUserReading":"-1","des":"The return of good looks! And cooking skills on top?! Lee Heena, an ordinary South Korean office worker. Age 25. Today, another ordinary day completely lost in overtime… is what she thought. She suddenly awakened. And then suddenly fell into a dungeon. “God, Buddha, Allah! Please let me awaken as a fighting-type hunter! If possible, a strong one!!” From the desperate wish, the system responded. [Congratulations!] [You have awakened as a hidden class, ‘Housekeeper’ (D)!] Although Heena’s skills in Plucking Herbs (C), Exterminating Pests (D), This is the Taste of My Magic Touch (D) are very useful in daily life, can she survive with these skills?! But, what’s this? Kang Jinhyeon, South Korea’s No. 1 ranking S-Class hunter, tried his hand at flirting. “I will leave everything I have to you.” “Hunter Kang Jinhyeon…” “Yes. Will you take responsibility for me?” “Why do you ask me to be your housekeeper in such a weird way?!” Is the simple and ordinary daily life that Heena dreamt of okay?! With a talking snail and moving pet plants ♥ The delightful romance fantasy 〈The Housekeeper in the Dungeon〉!","href":"housekeeper-in-a-dungeon-14820/","img":"https://likemanga.ink/upload/pages/2024/01/1704282077-659547ddc88f8-i437895.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:2.8K","statusDownload":-1,"time":1742711484956,"timeUpdateOnline":"","title":"Housekeeper in a Dungeon","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"the-cup-of-vengeance-is-in-your-hands-15662/","img":"https://likemanga.ink/upload/pages/2024/02/1706761419-65bb1ccbc5d56-e63f64ce9ceadd1053c448f29b731ee59243aac37201098354.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.5K","statusDownload":-1,"time":1742711484957,"timeUpdateOnline":"","title":"The Cup Of Vengeance Is In Your Hands","type":"Manhua"},{"chapterUserReading":"-1","des":"I suddenly woke up in the body of Melinia, a supporting character and the first love of Male Lead A from \"Azuli\u0027s Magnificent Misfortune.\" Since I know how this tragic tale ends, I decided to do what I can to stop the ultimate destruction of the kingdom from the male leads. But the more I try to fix things, I can\u0027t help but notice that the storyline seems to veer farther away from what I read. Will this plan of mine work? Or will it just cause more harm than the original?","href":"melin39;s-salvation-plan-25013/","img":"https://likemanga.ink/upload/pages/2024/06/1718321066-666b7faa5538d-bc95fd76211f0544dd62103f4db236d0ab0b941b4006004375.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:661","statusDownload":-1,"time":1742711484963,"timeUpdateOnline":"","title":"Melin\u0027s Salvation Plan","type":"Manhua"},{"chapterUserReading":"-1","des":"When it comes to the face of this student organization, it\u0027s a little weird, like a fool, scary, or moody. However, mysterious and futuristic days that seem strangely cute pass by. The world\u0027s cutest daily life 4 frames presented by a little genius Muchimaro!","href":"seitokai-ni-mo-ana-wa-aru33;-13308/","img":"https://likemanga.ink/upload/pages/2023/11/1701227167-6566aa9f9a7bc-seitokainimoanawaaru.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:625","statusDownload":-1,"time":1742711484965,"timeUpdateOnline":"","title":"Seitokai Ni Mo Ana Wa Aru!","type":"Manhua"},{"chapterUserReading":"-1","des":"Jiang Xiaoyong was betrayed and killed by a green tea girl in the apocalypse, but was accidentally resurrected a year ago and obtained the blind box system. He was always one step ahead of others, collecting supplies and spending a fortune to build a safe house before the apocalypse. He became stronger through the system and avenged his enemies in his previous life. From then on, he embarked on the road to the king\u0027s counterattack.","href":"rebirth-in-the-end-times-i-reached-the-top-by-opening-boxes-29459/","img":"https://likemanga.ink/upload/pages/2024/07/1722270033-66a7c15141f71-rebirthintheendtimesireachedthetopbyopeningboxeswe.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:4.6K","statusDownload":-1,"time":1742711484969,"timeUpdateOnline":"","title":"Rebirth in the end times: I reached the top by opening boxes","type":"Manhua"},{"chapterUserReading":"-1","des":"She was possessed by a book without knowing what novel it was. Then, one day, her fiance appeared. ‘Killian’ was a perfect Northern Duke with black hair, red eyes, and a handsome face. It was a contract marriage. ‘I can see that person is the male protagonist even if I rolled backwards…’So, Sophia believed without a doubt. She thought he would be the male protagonist. But…“Ah, I got caught.”The smell of blood came on the tip of her nose. Killian’s eyes narrowed. Then she realized the fact that he was a villain.And a cold hand caressed her cheek.“There won’t be a breakup, Sophie.”Raising the corners of his lips slightly, he whispered softly. ‘I think this is also a cliché… I hate that cliché!’","href":"since-when-you-were-the-villain-14418/","img":"https://likemanga.ink/upload/pages/2023/12/1702716769-657d6561a4b78-ec7d7a57edc7d1b1f950adf81e3f2d25733ec0257201030883.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:826","statusDownload":-1,"time":1742711484975,"timeUpdateOnline":"","title":"Since When You Were The Villain","type":"Manhua"},{"chapterUserReading":"-1","des":"When a forty year old Illian opened her eyes, the first thing she saw was a small hand. An old mercenary, who went back 10 years in past and turned into a twelve year old child, Haven Winter! First of all the family that is falling apart must be re-established, Now that she is back in the past, she must protect the thing he couldn’t protect in her previous life. However…the guy who used to bothered her in her previous life is getting in her way in this life too. “ Because you’re not Illian Heinrich.” What the hell was my past self to you?Duke Richard’s HavenTime to Dedicate for Your DeathTime to Dedicate Your Deathあなたの死を捧げる時为你的生命所献的时间献上你死亡的时间당신의 죽음을 바칠 시간","href":"duke-richard39;s-haven-5127/","img":"https://likemanga.ink/upload/pages/2023/08/1692496081-64e170d128a01-de7d431b2842fbe5aa75ebe1baba28b806d4c1c71080154324.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.3K","statusDownload":-1,"time":1742711484977,"timeUpdateOnline":"","title":"Duke Richard\u0027s Haven","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"dao-of-the-bizarre-immortal-32503/","img":"https://likemanga.ink/upload/pages/2024/11/1732365162-6741cb6a1e815-daoofthebizarreimmortal.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:2.6K","statusDownload":-1,"time":1742711486493,"timeUpdateOnline":"","title":"Dao of the Bizarre Immortal","type":"Manhua"},{"chapterUserReading":"-1","des":"“I’ll eat all your skills!”, ‘f*ck this awakening bullshit’, ‘To hell with being a loser.’ Kim Taehyun, whose awakening level remains undetermined, was treated as a loser because he failed to awaken. However, he awakened his ability at the moment of his death when a gate was created which lead to the king. Afterwards, Taehyun, who has returned due to the power of the king, gains a new skill called Predation. Taehyun, a 35-year old male, regresses to when he was 19. [Skill has been devoured]. Using this power, I can be placed among the best","href":"regressing-with-the-kings-power-267/","img":"https://likemanga.ink/upload/pages/2023/11/1699106088-65464d28888a8-regressingwiththekingspower.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:11K","statusDownload":-1,"time":1742711486494,"timeUpdateOnline":"","title":"Regressing with the Kings Power","type":"Manhua"},{"chapterUserReading":"-1","des":"\"A renowned matchmaker of London high society, a twenty-nine-year-old \u0027old maid.\u0027 Both contrasting modifiers refer to Laura Pendleton. She receives a request to find a match for a man named Ian Dalton. However, the person he proposes to, who by all accounts is a top bachelor, is none other than Laura herself.","href":"miss-pendleton-33260/","img":"https://likemanga.ink/upload/pages/2025/01/1737730836-6793ab14b51ad-f7ce9075abd3f0dd106c7fd75e327c2eccdc62fe4806236943.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:2.3K","statusDownload":-1,"time":1742711486494,"timeUpdateOnline":"","title":"Miss Pendleton","type":"Manhua"},{"chapterUserReading":"-1","des":"Sangwoo, a college student, decided to join an awakening program on an ordinary day. A system that enables even an average person to learn skills. The government has proceeded with this awakening program since a few years ago. Thus most of the population took the program and is awakened now. Sangwoo also participates in the program just like the others and gets cloning skill. The people around him think that the clone is just an illusion, but Sangwoo realises that the clone is real and decides to become a hunter. As Sangwoo was living well, using his skill, Jumper George Lucas appeared in front of him. After seeing the cloning skill of Sangwoo, he saw its potential and thus started to get interested in Sangwoo. When Sangwoo noticed what Lucas was thinking, he felt it to be a part of a big plan and couldn’t help but be nervous. Eventually, as Sangwoo was living as a hunter, he discovered Lucas’ plan and the dark secret behind it… Auto Hunting With My Clones 분신으로 자동사냥","href":"autohunting-with-clones-3290/","img":"https://likemanga.ink/upload/pages/2023/08/1691657130-64d4a3aa92a8e-autohuntingwithmyclones6699193x278.png","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:8.5K","statusDownload":-1,"time":1742711486495,"timeUpdateOnline":"","title":"Auto-Hunting With Clones","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"i’m-the-only-one-who-can-open-the-status-window-~-in-a-world-where-i’m-the-only-one-who-can-see-statuses-i-can-choose-all-the-cheat-skills-and-srank-items-i-want~-34030/","img":"https://likemanga.ink/upload/pages/2025/03/1742518533-67dcb90585980-imtheonlyonewhocanopenthestatuswindowinaworldwhere.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:373","statusDownload":-1,"time":1742711486495,"timeUpdateOnline":"","title":"I’m the Only One Who Can Open the Status Window ~ In a World Where I’m the Only One Who Can See Statuses I Can Choose All the Cheat Skills and S-Rank Items I Want~","type":"Manhua"},{"chapterUserReading":"-1","des":"JaeJu (which means “skill” in Korean) grew up without parents in an orphanage skillfully, just like his name suggests. One day, he heard that the orphanage was having a hard time and would have to close in 3 years. While trying to raise money for the orphanage, JaeJu got an alert on his phone. On it, he saw a video of himself climbing the tower as a BJ (broadcasting jockey aka streamer). Seven years ago, a tower suddenly appeared and randomly took people into it. If you successfully complete the tower and become an “Awakened”, it’s only a matter of time before you get rich!","href":"the-newbie-is-too-strong-1561/","img":"https://likemanga.ink/upload/pages/2023/08/1691371439-64d047af3fbbc-thenewbieistoostrong5261193x278.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:6.5K","statusDownload":-1,"time":1742711486496,"timeUpdateOnline":"","title":"The Newbie is Too Strong","type":"Manhua"},{"chapterUserReading":"-1","des":"Seth is an apprentice sorcerer from the Pompo Hills. Like all sorcerers, he\u0027s an \"infected\", one of the few people having survived an encounter with a Nemesis, those creatures falling from the sky and destroying everything around them. Being immune to them, Seth wants to become a Hunter and fight the Nemesis. But what Seth really wants is to find the source of all Nemesis, the Radiant. Helped by his fellow sorcerers, he will seek the Radiant, under the harsh scrutiny of the Inquisition...","href":"radiant-manga-11760/","img":"https://likemanga.ink/upload/pages/2023/11/1699059995-6545991ba1e2c-radiant.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:336","statusDownload":-1,"time":1742711486497,"timeUpdateOnline":"","title":"Radiant - Manga","type":"Manhua"},{"chapterUserReading":"-1","des":"SeoJoon, who had been working to save in order to pay off his dead parents’ debt and to attend a hunter academy, ended up needing to spend all his savings for surgery due to an unfortunate accident. In his moment of despair, a weird ad played. [You can also become an awakener!] He decided to register since he had nothing else to lose. [Mr. Kim SeoJoon, welcome to Transcension Academy.] This hunter academy is on a different ‘dimension’ than other hunter academies! In the age of private hunter education, you can also become a ‘transcended’! I Became a Student at the Transcension Academy I Became a Student at Transcendental Academy Я стал студентом Трансцендентальной Академии 欢迎加入超越者学院 초월자 학원의 수강생이 되었다 / Enrolling in the","href":"transcension-academy-1958/","img":"https://likemanga.ink/upload/pages/2023/08/1691419360-64d102e0c911b-transcensionacademy7032193x278.png","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:13.4K","statusDownload":-1,"time":1742711486497,"timeUpdateOnline":"","title":"Transcension Academy","type":"Manhua"},{"chapterUserReading":"-1","des":"[By the studio that brought you and","href":"the-last-adventurer-18340/","img":"https://likemanga.ink/upload/pages/2024/03/1711815200-66083a2046c0f-thelastadventurer.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:8.3K","statusDownload":-1,"time":1742711486498,"timeUpdateOnline":"","title":"The Last Adventurer","type":"Manhua"},{"chapterUserReading":"-1","des":"in the wake of scientific advancement, the once majestic mythological animals can\u0027t be compared to the olden days now. the mythological animal si bu xiang received orders to descend to the mortal world and to help out other mythological animals in dire straits wandering the human world. in the secular world, he met his old colleague pi xiu in a tight spot, his drinking buddy tu ye down in his luck, and the gold and silver jue brothers who were demoted to the mortal world... what kind of stories will happen between them? \"you shou yan\" updates every wednesday, welcome to the furballs\u0027 world! author: 靴下猫腰子 editor: 凩汐","href":"you-shou-yan-11797/","img":"https://likemanga.ink/upload/pages/2023/11/1699091735-654615175b0c5-youshouyan.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:257","statusDownload":-1,"time":1742711486498,"timeUpdateOnline":"","title":"You Shou Yan","type":"Manhua"},{"chapterUserReading":"-1","des":"Yu Ijin was the sole survivor of a plane crash when he was little. After becoming a mercenary to survive for 10 years, he returns to his family in his hometown. Teenage Mercenary","href":"mercenary-enrollment-3350/","img":"https://likemanga.ink/upload/pages/2023/08/1691674329-64d4e6d975b63-mercenaryenrollment18126193x278.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:22.9K","statusDownload":-1,"time":1742711486499,"timeUpdateOnline":"","title":"Mercenary Enrollment","type":"Manhua"},{"chapterUserReading":"-1","des":"In The Unwomanly Face of War, Alexievich chronicles the experiences of the Soviet women who fought on the front lines, on the home front, and in the occupied territories. These women—more than a million in total—were nurses and doctors, pilots, tank drivers, machine-gunners, and snipers. They battled alongside men, and yet, after the victory, their efforts and sacrifices were forgotten.","href":"war39;s-unwomanly-face-25260/","img":"https://likemanga.ink/upload/pages/2024/06/1718528238-666ea8eef1a36-warsunwomanlyface.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:59","statusDownload":-1,"time":1742711486499,"timeUpdateOnline":"","title":"War\u0027s Unwomanly Face","type":"Manhua"},{"chapterUserReading":"-1","des":"What shall we play with today, young one?. With these words, the worn-down-looking older sister accosts the grade school protagonist into yet another playful game. With her nostalgic toys, from Beyblades to yoyos to modern eccentricities like Yo-Kai Watch and Duel Masters, she\u0027ll one up anyone twice her junior in the ways of play and enjoyment.","href":"downer-oneesan-wa-asobitai-34003/","img":"https://likemanga.ink/upload/pages/2025/03/1742346808-67da1a387e731-downeroneesanwaasobitai.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:70","statusDownload":-1,"time":1742711486499,"timeUpdateOnline":"","title":"Downer Onee-san wa Asobitai","type":"Manhua"},{"chapterUserReading":"-1","des":"The Greatest Martial Artist, The Ultimate Evil of the Martial World, and the Supreme Terror of the Martial Arts—Blood Wind Lion. One day, an eight-year-old senior brother, Geom Woo-bin, suddenly appears before them. “Senior brother, you know we love you, right?” A delightful martial arts tale of five sworn brothers.","href":"the-villains’-senior-brother-33957/","img":"https://likemanga.ink/upload/pages/2025/03/1742092451-67d638a359194-thevillainsseniorbrother.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:354","statusDownload":-1,"time":1742711486500,"timeUpdateOnline":"","title":"The Villains’ Senior Brother","type":"Manhua"},{"chapterUserReading":"-1","des":"In the kingdom Lutz lived in until now, commoners were unable to climb up the social ladder, their efforts were denied and extra work disregarded. Lutz finally got fed up, and decided to move to the Empire, which was a complete meritocracy. It was a wonderful country where hard work and creativity was valued. Moreover, Lutz\u0027s special magic, which was seen to be useless in the kingdom, is able to beat platoon level monsters in the Empire! Lutz decides to set off in this new land, where values are upheld, rewards are given, and there\u0027s a simple path to get ahead in life! A fast paced magical isekai fantasy!!!","href":"i-was-acknowledged-as-a-useless-goodfornothing-so-i-moved-to-the-empire-to-get-ahead-in-life-30934/","img":"https://likemanga.ink/upload/pages/2024/08/1723769093-66bea1059b23c-rrohyykha8h0jcj8wjr6ejv1yzz03jsoatu03pa6ahhdwohfmd.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:142","statusDownload":-1,"time":1742711486500,"timeUpdateOnline":"","title":"I was acknowledged as a useless good-for-nothing so I moved to the Empire to get ahead in life","type":"Manhua"},{"chapterUserReading":"-1","des":"Mori, a child found in an abandoned house, opens his eyes in a shelter by a rescue team. One day, while adjusting to an unfamiliar life, he receives unconditional love from a sponsor and grows up. When a close friend leaves with his mother, the child, who finds out that there is a mother, thinks. Could this person be.. my mother? The story of Mori\u0027s journey to meet his distant and difficult mother.","href":"on-the-way-to-meet-mom-32706/","img":"https://likemanga.ink/upload/pages/2024/12/1733838343-67584607dc45c-044a7c90484ee4b435d4765e5cb2a3fd6f53f8526008701795.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:6.7K","statusDownload":-1,"time":1742711486501,"timeUpdateOnline":"","title":"On The Way To Meet Mom","type":"Manhua"},{"chapterUserReading":"-1","des":"The apocalypse game swept across the globe and merged with the real world, causing the collapse of order. In his previous life, Ye Xiao devoted everything to elevating his fiancée, Liu Ruyan, to the pinnacle of power, only to have his heart literally ripped out by her on the day of their engagement and transplanted into her male best friend. Reborn into a new life, Ye Xiao resolves to ascend the throne alone. Before the game closes its recharge portal, he spends billions of his fortune to switch to a god-level profession.","href":"starting-as-the-god-of-wealth-taming-billions-of-divine-pets33;-33012/","img":"https://likemanga.ink/upload/pages/2025/01/1736048177-6779fe31324f7-startingasthegodofwealthtamingbillionsofdivinepets.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:3.2K","statusDownload":-1,"time":1742711486501,"timeUpdateOnline":"","title":"Starting As The God Of Wealth Taming Billions Of Divine Pets!","type":"Manhua"},{"chapterUserReading":"-1","des":"[By theStudiothat brought you {Murim Login}!}The character with the highest difficulty and the worst performance, Baek Yuseol, was considered a trash character in-game because he could not use magic in a fantasy setting where everyone else could.However…[Because the wrong ending has been reached, 90% of Aether World has been destroyed.] [Please reach the “True Ending.”] Suddenly, those words echoed in my mind before I was transmigrated to the Aether World.[You can use the skill “Blink.”] “Just why did I possess this character?”Blink was the only magic skill I had.Surviving in Stella Academy among genius mages, I became the notorious Blink Mage.","href":"magic-academy’s-genius-blinker-24564/","img":"https://likemanga.ink/upload/pages/2024/06/1717892102-6664f4061878a-magicacademysgeniusblinker.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:12.5K","statusDownload":-1,"time":1742711486501,"timeUpdateOnline":"","title":"Magic Academy’s Genius Blinker","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"a-flame-reborn-14870/","img":"https://likemanga.ink/upload/pages/2024/01/1704621999-659a77af0b51b-regressorofthefallenfamilythisislikebrandnewfoundv.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:10.2K","statusDownload":-1,"time":1742711486502,"timeUpdateOnline":"","title":"A Flame Reborn","type":"Manhua"},{"chapterUserReading":"-1","des":"In a world where reality and gaming have merged, numerous ferocious beasts roam freely, and various mysterious realms and dungeons exist. To withstand the onslaught of these beasts, everyone must undergo job changes and level up rapidly. On the day of his job change, Lu Fan becomes the holder of the hidden class— Dragon Tamer. However, due to the immense power of giant dragons, taming them seems impossible, earning Dragon Tamer the title of the most useless class. Fortunately, he awakens the Super Treasure Map System. With his colossal dragon accompanying him, Lu Fan sweeps through everything, causing the entire world to tremble. title: worthless job: Dragon Tamer","href":"worthless-profession-dragon-tamer-15665/","img":"https://likemanga.ink/upload/pages/2024/02/1706769756-65bb3d5c050b9-worthlessprofessiondragontamer.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:12.5K","statusDownload":-1,"time":1742711486503,"timeUpdateOnline":"","title":"WORTHLESS PROFESSION: DRAGON TAMER","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"your-majesty-please-stop-now-8886/","img":"https://likemanga.ink/upload/pages/2023/09/1695329605-650cad45b6b9d-093.png","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:1.4K","statusDownload":-1,"time":1742711486503,"timeUpdateOnline":"","title":"Your Majesty Please Stop Now","type":"Manhua"},{"chapterUserReading":"-1","des":"Its a story about an MMA champion who gets transmigrated to the game he played for 10 years. He then possessed a mage character with no magic stats.","href":"the-genius-mage-who-uses-his-fists-33669/","img":"https://likemanga.ink/upload/pages/2025/02/1740243820-67ba036c34290-thegeniusmagewhouseshisfists.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:4.6K","statusDownload":-1,"time":1742711486504,"timeUpdateOnline":"","title":"The Genius Mage Who Uses His Fists","type":"Manhua"},{"chapterUserReading":"-1","des":"I possessed a character in a novel that has over 3,000 chapters Not only that, I possessed my second favorite character who is also next in line for the Neptis Duchy: \u0027Mitchell Neftis\u0027. But when I opened my status window, it said I had 3 days until my death. I didn\u0027t want to die so I worked hard to survive, and learned that somehow every time I change the development of the novel I gain EXP?! That\u0027s when I decided to keep changing the plot and get all the EXP I can get. But I\u0027ve put \u0027Michelle Neptis\u0027 aside for now and have been living as a nanny\u0027s daughter \u0027Evan Rife\u0027 doing what I was told, when my status window started flooding my screen with missions. The failure to complete them being death. Because of this, changing the plot is no longer a part-time job. I\u0027m going to survive no matter what!","href":"deadline-is-raining-in-the-status-window-18753/","img":"https://likemanga.ink/upload/pages/2024/04/1712392326-661108862decb-2344cde354fa205676d1401873ab3e0c423704f42880412014.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:2.9K","statusDownload":-1,"time":1742711486504,"timeUpdateOnline":"","title":"Deadline Is Raining in the Status Window","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"outrageous33;-i-opened-a-training-class-for-empresses-31439/","img":"https://likemanga.ink/upload/pages/2024/09/1725353069-66d6cc6d03692-outrageousiopenedatrainingclassforempresses.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:2.2K","statusDownload":-1,"time":1742711486505,"timeUpdateOnline":"","title":"Outrageous! I opened a training class for empresses","type":"Manhua"},{"chapterUserReading":"-1","des":"","href":"bakushin-ojousama-dou33;-32187/","img":"https://likemanga.ink/upload/pages/2024/10/1730080441-671eeeb99eeca-bakushinojousamadou.webp","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:73","statusDownload":-1,"time":1742711486505,"timeUpdateOnline":"","title":"Bakushin Ojou-sama Dou!","type":"Manhua"},{"chapterUserReading":"-1","des":"On his deathbed, the supreme dark leader is given an ironic second chance at life. He’s reborn as Jinmu, a young disciple of his rival clan, the righteous Mudang. Determined to make the best of a bad situation, he resolves to plunge the clan into corruption and debauchery by becoming their master disciple. Oblivious to this nefarious scheme, the Mudang begin to fall for Jinmu’s audacious approach to life and martial arts. Will Jinmu be the Mudang Clan’s downfall or just the kick in the pants it needs?","href":"path-of-the-shaman-1565/","img":"https://likemanga.ink/upload/pages/2023/08/1691371503-64d047ef4fca0-pathoftheshaman5787193x278.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:6.5K","statusDownload":-1,"time":1742711486506,"timeUpdateOnline":"","title":"Path of the Shaman","type":"Manhua"},{"chapterUserReading":"-1","des":"Shamisen is a traditional Japanese musical instrument that looks similar to a guitar. Teenager Sawamura Setsu\u0027s grandfather who raised him and his older brother Wakana, recently passed away. His grandfather was one of the greatest Shamisen players and the two siblings grew up listening to him play and learning to play the instrument. Since the grandfather\u0027s death, Setsu dropped out of high school, moved to Tokyo and has been drifting, not knowing what to do besides play his Shamisen. That\u0027s when his successful and rich mother, Umeko storms into his life and tries to shape Setsu up. She enrolls him back into high school but little does Setsu know that he is about to rediscover his passion for Shamisen. Nominated for the 4th Manga Taisho Award (2011).","href":"mashiro-no-oto-20288/","img":"https://likemanga.ink/upload/pages/2024/04/1714197881-662c957911f18-mashironooto.jpg","isDownload":false,"isFollow":false,"isFull":false,"isHost":false,"isNewAnimeUpdate":false,"isNovel":false,"isRead":false,"isReadNewChapter":true,"lastChapter":"View:145","statusDownload":-1,"time":1742711486507,"timeUpdateOnline":"","title":"Mashiro No Oto","type":"Manhua"}]